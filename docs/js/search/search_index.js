var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.371,1,1.871]],["body/modules/AppModule.html",[0,1.728,1,2.887,2,1.728,3,1.495,4,0.827,5,3.539,6,1.714,7,0.057,8,4.333,9,3.539,10,2.827,11,4.333,12,2.358,13,3.539,14,2.358,15,3.539,16,1.495,17,0.7,18,0.046,19,0.046]],["title/classes/MyStompRService.html",[17,0.555,20,1.593]],["body/classes/MyStompRService.html",[2,1.013,3,0.876,4,0.485,6,1.108,7,0.057,16,1.763,17,0.706,18,0.032,19,0.032,20,1.716,21,1.177,22,2.379,23,1.744,24,0.657,25,2.78,26,2.227,27,3.334,28,1.177,29,2.075,30,2.472,31,2.026,32,1.744,33,2.853,34,2.853,35,2.853,36,1.658,37,2.853,38,0.826,39,1.072,40,1.509,41,1.177,42,1.307,43,1.477,44,1.013,45,2.417,46,1.744,47,1.382,48,1.716,49,1.477,50,1.177,51,0.876,52,1.177,53,1.657,54,1.382,55,1.657,56,1.013,57,1.108,58,1.916,59,1.013,60,1.477,61,1.477,62,1.013,63,1.716,64,1.013,65,1.013,66,1.477,67,1.477,68,1.763,69,1.744,70,1.013,71,1.131,72,1.013,73,1.013,74,1.013,75,1.477,76,1.013,77,1.013,78,1.013,79,1.013,80,1.013,81,1.013,82,0.876,83,1.013,84,1.657,85,1.177,86,1.177,87,1.177,88,1.013,89,1.013,90,1.177,91,1.382,92,1.382,93,1.657,94,2.417,95,1.382,96,1.657]],["title/classes/MyStompService.html",[17,0.555,90,1.593]],["body/classes/MyStompService.html",[2,0.984,3,0.851,4,0.471,6,1.084,7,0.057,16,1.742,17,0.694,18,0.031,19,0.031,20,1.143,21,1.143,22,2.34,23,1.446,24,0.638,25,2.748,26,2.196,27,3.294,28,1.68,30,2.446,31,1.992,32,1.715,33,2.805,34,2.805,35,2.805,36,1.635,37,2.805,38,0.959,39,1.177,40,1.483,41,1.143,42,1.286,43,1.446,44,0.984,45,2.366,46,1.715,47,1.343,48,1.68,49,1.446,50,1.143,51,0.851,52,1.143,53,1.61,54,1.343,55,1.61,56,0.984,57,1.084,58,1.89,59,0.984,60,1.446,61,1.446,62,0.984,63,1.68,64,0.984,65,0.984,66,1.446,67,1.446,68,1.742,69,1.715,70,0.984,71,1.112,72,0.984,73,0.984,74,0.984,75,1.446,76,0.984,77,0.984,78,0.984,79,0.984,80,0.984,81,0.984,82,0.851,83,0.984,84,1.61,85,1.143,86,1.143,87,1.143,88,0.984,89,0.984,90,1.68,91,1.343,92,1.973,93,1.61,94,2.366,95,1.343,96,1.61,97,1.343,98,2.015,99,2.015,100,0.984,101,0.984,102,0.738,103,1.343,104,2.015]],["title/injectables/StompConfig.html",[39,0.767,105,0.89]],["body/injectables/StompConfig.html",[2,0.782,3,0.676,4,0.374,6,0.911,7,0.057,12,1.067,16,0.676,17,0.317,18,0.026,19,0.026,24,0.507,28,2.24,32,1.215,36,1.455,38,0.68,39,0.68,40,1.052,41,1.412,42,0.911,46,1.928,47,1.658,49,1.215,50,1.412,51,1.052,52,1.412,57,1.509,58,2.184,59,1.215,60,1.215,61,1.215,62,1.215,64,1.681,65,1.681,66,1.928,67,1.928,68,1.8,69,2.08,70,1.681,71,1.251,72,1.681,73,1.215,74,1.215,75,1.681,76,1.215,77,1.215,78,1.215,79,1.215,80,1.215,81,1.215,82,1.052,83,1.681,88,1.928,100,1.215,102,1.446,105,0.967,106,1.279,107,1.279,108,2.489,109,1.412,110,2.294,111,1.455,112,3.053,113,1.601,114,1.988,115,1.954,116,1.601,117,2.746,118,2.489,119,2.489,120,1.412,121,2.489,122,2.751,123,2.916,124,1.601,125,2.489,126,1.601,127,2.489,128,1.601,129,1.601,130,1.412,131,1.988,132,1.732,133,1.658,134,1.052,135,1.988,136,1.954,137,1.412,138,2.489,139,1.658,140,2.489,141,2.489,142,1.988,143,1.988]],["title/injectables/StompService.html",[38,0.767,105,0.89]],["body/injectables/StompService.html",[2,1.261,3,1.091,4,0.603,6,1.474,7,0.057,12,1.721,16,1.091,17,0.511,18,0.037,19,0.037,22,1.721,23,1.966,26,2.004,28,1.466,36,1.091,38,0.965,39,1.182,44,1.725,71,1.119,97,2.683,100,1.261,101,1.261,102,0.946,103,1.721,105,1.276,107,2.822,109,2.284,130,1.466,132,2.455,136,2.284,144,2.064,145,2.822,146,2.455,147,1.829,148,3.533,149,3.533,150,2.584,151,3.533,152,2.004,153,2.822,154,2.584,155,2.584,156,2.584,157,1.721,158,2.822,159,2.064,160,2.584,161,1.721,162,2.584,163,2.584,164,2.822,165,2.064,166,2.584,167,2.584,168,2.584,169,2.584,170,2.064,171,1.466,172,2.584,173,2.584,174,2.584]],["title/changelog.html",[175,1.595,176,1.595,177,1.595]],["body/changelog.html",[3,0.999,4,0.553,7,0.04,18,0.035,19,0.035,38,0.646,39,0.646,40,0.999,51,0.999,56,1.623,57,1.407,71,0.75,82,1.404,102,1.217,105,0.75,109,1.886,111,1.404,114,1.89,115,1.342,117,1.576,120,1.342,123,2.56,131,1.89,134,1.623,146,1.342,147,1.404,152,1.342,157,1.576,171,2.18,177,1.576,178,3.329,179,1.89,180,3.069,181,1.89,182,3.324,183,1.89,184,1.89,185,2.366,186,3.507,187,3.324,188,1.876,189,1.576,190,1.89,191,2.366,192,2.655,193,3.324,194,2.366,195,2.366,196,2.215,197,1.89,198,2.655,199,3.329,200,1.89,201,1.576,202,2.366,203,3.324,204,3.324,205,1.576,206,1.89,207,2.366,208,2.366,209,2.366,210,2.366,211,2.366,212,2.366,213,2.366,214,1.89,215,1.576,216,2.366,217,2.56,218,2.366,219,1.89,220,1.576,221,2.366,222,2.215,223,1.576,224,2.215,225,1.576,226,2.366,227,1.89,228,2.366,229,1.342,230,1.89,231,1.89,232,2.366,233,2.366,234,2.366,235,2.366,236,1.89,237,1.342,238,2.366,239,1.89,240,2.366,241,1.89,242,2.366,243,1.89,244,2.655,245,2.366,246,1.89,247,2.366,248,2.366,249,2.366,250,2.366,251,1.89,252,2.366,253,2.366,254,2.366,255,1.89,256,1.342,257,2.366,258,1.89,259,2.366,260,2.366,261,1.576,262,1.89]],["title/coverage.html",[263,2.985]],["body/coverage.html",[4,0.678,7,0.055,17,0.756,18,0.04,19,0.04,20,1.648,21,2.675,23,1.418,38,0.793,39,0.793,42,1.772,43,1.418,48,1.648,49,1.418,68,2.116,90,1.648,102,1.063,105,1.353,106,2.32,134,1.227,144,2.32,263,2.32,264,2.904,265,2.904,266,2.32,267,2.546,268,3.053,269,5.008,270,2.32,271,3.412,272,2.32,273,2.32,274,2.32,275,2.904,276,2.904,277,2.904,278,2.904,279,2.32,280,1.935,281,2.904,282,4.271,283,2.904,284,2.904,285,2.904,286,2.904,287,2.904]],["title/dependencies.html",[188,1.636,288,2.393]],["body/dependencies.html",[7,0.052,18,0.049,19,0.049,188,1.986,189,2.711,190,3.25,289,3.25]],["title/miscellaneous/enumerations.html",[290,0.758,291,2.677]],["body/miscellaneous/enumerations.html",[7,0.048,18,0.048,19,0.048,24,1.218,30,2.182,111,1.625,132,2.182,146,2.182,229,2.182,280,2.562,290,1.218,291,3.072,292,4.555,293,3.072,294,4.555,295,3.846,296,3.072,297,3.072]],["title/miscellaneous/functions.html",[42,1.227,290,0.758]],["body/miscellaneous/functions.html",[7,0.054,18,0.043,19,0.043,21,1.81,24,1.011,38,1.22,42,1.168,43,2.181,48,2.534,92,2.126,95,2.126,100,2.296,101,2.296,103,3.133,271,2.548,272,3.244,273,3.244,274,3.244,279,3.244,290,1.011,298,4.467,299,4.467,300,4.703,301,3.19,302,4.964,303,3.19,304,3.19]],["title/index.html",[24,0.758,175,1.595,176,1.595]],["body/index.html",[4,0.584,6,0.772,7,0.053,14,2.301,17,0.494,18,0.017,19,0.017,23,1.22,25,1.072,26,0.533,30,0.533,31,0.913,32,0.786,36,0.68,38,0.943,39,0.943,40,0.891,44,1.932,46,0.459,51,0.397,52,0.533,56,0.459,57,0.915,58,1.496,59,0.459,60,0.786,61,0.786,62,0.459,63,0.913,64,0.459,65,0.459,66,0.786,67,1.22,68,1.056,69,1.03,70,0.459,71,1.094,72,0.459,73,0.786,74,0.459,75,0.786,76,0.459,77,0.786,78,0.459,79,0.459,80,0.459,81,0.786,82,0.397,83,0.459,85,0.533,86,0.533,87,0.533,88,0.459,89,0.459,91,1.072,97,0.626,101,0.786,105,0.792,109,1.959,111,1.459,115,0.913,117,2.301,120,0.533,122,1.286,123,1.406,130,0.913,132,2.046,133,1.665,134,1.056,135,1.996,136,0.913,137,0.533,139,1.406,145,1.685,146,0.913,147,1.628,152,2.186,153,1.685,157,1.872,158,2.615,159,2.244,161,1.072,164,1.685,165,1.685,170,1.286,171,1.418,177,0.626,178,3.233,179,1.996,180,2.244,181,0.751,183,1.685,184,1.286,186,1.286,188,1.22,189,1.406,192,0.751,196,1.072,197,0.751,198,0.751,199,0.751,201,0.626,205,2.301,206,2.758,215,1.072,217,1.665,219,1.286,220,1.072,222,2.402,223,1.665,224,2.491,225,0.626,227,0.751,229,1.197,230,1.286,231,0.751,237,0.533,241,1.685,244,0.751,251,0.751,256,0.533,258,0.751,261,1.072,262,1.685,289,1.286,296,1.286,297,0.751,305,2.11,306,2.499,307,0.94,308,0.94,309,0.94,310,0.94,311,0.94,312,1.609,313,0.94,314,1.609,315,2.11,316,0.94,317,0.94,318,0.94,319,0.94,320,0.94,321,0.94,322,0.94,323,0.94,324,0.94,325,1.996,326,0.94,327,1.609,328,0.94,329,1.609,330,0.94,331,0.751,332,0.94,333,1.609,334,1.609,335,0.94,336,0.94,337,0.94,338,1.609,339,0.94,340,0.94,341,0.94,342,0.94,343,0.94,344,0.94,345,0.94,346,0.94,347,0.94,348,0.94,349,0.94,350,0.94,351,0.94,352,2.11,353,0.751,354,0.94,355,0.94,356,0.94,357,1.996,358,0.94,359,0.94,360,1.665,361,0.94,362,1.286,363,0.94,364,0.94,365,0.94,366,1.609,367,0.751,368,0.94,369,0.94,370,0.94,371,2.809,372,0.94,373,2.11,374,1.609,375,3.274,376,0.94,377,1.286,378,0.94,379,0.94,380,0.94,381,0.94,382,2.615,383,2.244,384,1.609,385,0.94,386,0.94,387,0.94,388,0.94,389,0.94,390,0.94,391,0.94,392,0.94,393,0.94,394,0.94,395,1.286,396,2.11,397,0.94,398,0.94,399,0.94,400,0.751,401,0.626,402,0.751,403,0.94,404,0.94,405,0.94,406,0.94,407,0.94,408,0.94,409,0.94,410,1.609,411,0.94,412,0.94,413,0.94,414,0.94,415,0.94,416,0.94,417,0.94,418,0.94,419,0.94,420,0.94,421,0.94,422,0.94,423,0.94,424,1.609,425,0.94,426,1.609,427,0.94,428,0.94,429,0.94,430,0.94,431,0.94,432,0.94,433,0.94,434,0.94,435,1.609,436,0.751,437,0.94,438,0.94,439,0.94,440,0.94,441,0.94,442,0.751,443,0.94,444,0.94,445,1.609,446,0.94,447,1.609,448,2.499,449,1.609,450,0.94,451,0.94,452,1.609,453,0.94,454,0.94,455,0.94,456,0.94,457,0.94,458,0.94,459,0.94,460,0.94,461,0.94,462,0.751,463,0.94,464,1.609,465,0.94,466,0.94,467,0.94,468,1.072,469,0.94,470,0.94,471,0.94,472,0.94,473,0.94,474,0.94,475,0.94,476,0.94,477,0.751,478,1.609,479,0.94,480,0.94,481,0.94,482,0.94,483,0.94,484,0.94,485,0.94,486,0.94,487,0.94,488,0.94,489,0.94,490,0.94,491,0.751,492,0.751,493,0.94,494,0.94,495,0.94,496,0.94,497,0.94,498,0.94,499,0.626,500,0.751]],["title/license.html",[175,1.595,176,1.595,499,1.595]],["body/license.html",[4,0.667,7,0.04,14,1.902,18,0.04,19,0.04,54,1.902,111,1.206,134,1.206,147,1.596,236,2.281,243,2.281,261,1.902,325,2.281,400,2.281,401,3.003,402,2.281,491,2.281,492,2.281,499,1.902,500,2.281,501,4.235,502,2.855,503,2.855,504,3.779,505,2.855,506,2.855,507,2.855,508,3.779,509,2.855,510,5.049,511,2.855,512,3.779,513,4.235,514,2.855,515,4.235,516,3.018,517,2.855,518,2.855,519,2.855,520,2.855,521,2.855,522,2.855,523,2.855,524,2.855,525,3.779,526,3.779,527,2.855,528,2.855,529,3.779,530,2.855,531,2.855,532,2.855,533,2.855,534,2.855,535,2.855,536,2.855,537,2.855,538,2.855,539,2.855,540,2.855,541,2.855,542,2.855,543,2.855,544,2.855,545,2.855,546,2.855,547,2.855,548,2.855,549,2.855,550,2.855,551,2.281]],["title/modules.html",[0,1.825]],["body/modules.html",[0,2.006,1,2.737,7,0.05,18,0.05,19,0.05,552,4.108]],["title/overview.html",[553,2.985]],["body/overview.html",[0,1.967,7,0.049,17,0.797,18,0.049,19,0.049,105,1.277,553,3.219,554,4.03,555,4.03,556,4.03]],["title/miscellaneous/typealiases.html",[290,0.758,557,3.351]],["body/miscellaneous/typealiases.html",[7,0.048,18,0.048,19,0.048,24,1.224,57,1.414,102,1.78,115,2.759,280,2.574,290,1.224,293,3.086,558,3.863,559,4.567,560,3.863,561,3.863]],["title/miscellaneous/variables.html",[267,2.233,290,0.758]],["body/miscellaneous/variables.html",[7,0.055,18,0.046,19,0.046,24,1.126,71,1.376,89,1.735,102,1.59,110,3.256,137,2.464,266,2.839,267,2.368,268,4.074,270,2.839,290,1.126,562,3.554,563,3.554,564,4.344,565,3.554]],["title/additional-documentation/sock-js.html",[214,1.666,256,1.183,468,1.389,566,2.085]],["body/additional-documentation/sock-js.html",[6,0.714,7,0.054,10,1.557,16,0.824,17,0.386,18,0.03,19,0.03,31,1.106,32,1.86,36,1.221,39,1.04,40,2.113,41,1.64,42,1.395,43,1.86,44,0.952,46,1.86,49,0.952,50,1.106,51,0.824,56,1.411,57,1.058,58,1.986,59,0.952,60,1.411,61,1.411,62,0.952,63,1.64,64,0.952,65,0.952,66,1.411,67,1.411,68,1.609,69,1.682,70,0.952,71,1.091,72,0.952,73,1.411,74,0.952,75,1.411,76,0.952,77,0.952,78,0.952,79,1.411,80,1.411,81,1.411,82,0.824,83,0.952,85,1.106,86,1.106,87,1.106,88,0.952,89,0.952,100,0.952,101,0.952,110,1.299,111,0.824,120,1.64,130,1.64,133,1.299,136,1.106,137,1.106,142,1.557,143,1.557,147,1.719,152,1.106,161,2.538,171,1.106,196,1.299,200,1.557,201,1.299,205,1.926,215,1.926,217,2.711,220,1.299,222,1.299,223,1.299,224,1.299,225,1.299,229,1.106,237,1.106,246,1.557,331,1.557,357,1.557,360,1.926,367,2.309,377,1.557,382,2.309,383,2.309,395,1.557,401,1.299,436,1.557,442,2.309,462,1.557,477,1.557,516,2.309,567,1.95,568,1.95,569,1.557,570,1.95,571,1.95,572,1.95,573,1.95,574,2.89,575,2.89,576,2.89,577,1.95,578,1.95,579,1.95,580,1.95,581,1.95,582,1.95,583,1.95,584,1.95,585,1.95,586,1.95,587,1.95,588,1.95,589,2.89,590,1.95,591,1.95,592,1.95,593,1.95,594,2.89,595,2.89,596,1.95,597,1.557,598,1.95,599,2.89,600,1.95,601,1.95]],["title/additional-documentation/contributing.html",[256,1.358,468,1.595,602,1.912]],["body/additional-documentation/contributing.html",[4,0.859,7,0.054,18,0.047,19,0.047,134,1.554,139,2.955,147,1.554,188,1.796,237,2.702,239,2.938,255,2.938,353,2.938,360,2.45,362,2.938,551,2.938,569,2.938,597,2.938,602,2.938,603,3.678,604,3.678,605,3.678,606,4.435]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["0",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["0.3.0",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":195,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":185,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":554,"title":{},"body":{"overview.html":{}}}],["1/2",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["2",{"_index":556,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":354,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["2/4/5",{"_index":183,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["20",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["20000",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["2017",{"_index":503,"title":{},"body":{"license.html":{}}}],["2018",{"_index":336,"title":{},"body":{"index.html":{}}}],["23/23",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":555,"title":{},"body":{"overview.html":{}}}],["33",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":289,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.0.2",{"_index":190,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["4.x.x",{"_index":184,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["5",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["5.0.0",{"_index":355,"title":{},"body":{"index.html":{}}}],["50",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["6",{"_index":179,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":330,"title":{},"body":{"index.html":{}}}],["6.x.x",{"_index":181,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7/7",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["_conf",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_stompservic",{"_index":410,"title":{},"body":{"index.html":{}}}],["abil",{"_index":204,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{}}}],["action",{"_index":546,"title":{},"body":{"license.html":{}}}],["activ",{"_index":387,"title":{},"body":{"index.html":{}}}],["actual",{"_index":315,"title":{},"body":{"index.html":{}}}],["ad",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":363,"title":{},"body":{"index.html":{}}}],["addit",{"_index":468,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"index.html":{}}}],["addition",{"_index":365,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":598,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["affect",{"_index":601,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["alias",{"_index":558,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":200,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["altern",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{}}}],["and/or",{"_index":519,"title":{},"body":{"license.html":{}}}],["anguar",{"_index":317,"title":{},"body":{"index.html":{}}}],["angular",{"_index":178,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/cor",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["angular/platform",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["angular2",{"_index":145,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["angular4",{"_index":306,"title":{},"body":{"index.html":{}}}],["angular5",{"_index":307,"title":{},"body":{"index.html":{}}}],["angular6",{"_index":308,"title":{},"body":{"index.html":{}}}],["api",{"_index":262,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app_initi",{"_index":230,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":338,"title":{},"body":{"index.html":{}}}],["applic",{"_index":567,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appreci",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["aris",{"_index":550,"title":{},"body":{"license.html":{}}}],["around",{"_index":600,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["assign",{"_index":470,"title":{},"body":{"index.html":{}}}],["associ",{"_index":511,"title":{},"body":{"license.html":{}}}],["assum",{"_index":384,"title":{},"body":{"index.html":{}}}],["astha",{"_index":493,"title":{},"body":{"index.html":{}}}],["async",{"_index":422,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":166,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["author",{"_index":539,"title":{},"body":{"license.html":{}}}],["auto",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["background",{"_index":394,"title":{},"body":{"index.html":{}}}],["base",{"_index":413,"title":{},"body":{"index.html":{}}}],["be",{"_index":332,"title":{},"body":{"index.html":{}}}],["beat",{"_index":588,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["befor",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["behaviorsubject",{"_index":450,"title":{},"body":{"index.html":{}}}],["below",{"_index":45,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":408,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"injectables/StompConfig.html":{}}}],["bootstrap",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["both",{"_index":333,"title":{},"body":{"index.html":{}}}],["branch",{"_index":329,"title":{},"body":{"index.html":{}}}],["break",{"_index":322,"title":{},"body":{"index.html":{}}}],["broken",{"_index":347,"title":{},"body":{"index.html":{}}}],["broker",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["brows",{"_index":552,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/sock-js.html":{}}}],["browsermodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{}}}],["bundl",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":502,"title":{},"body":{"license.html":{}}}],["call",{"_index":375,"title":{},"body":{"index.html":{}}}],["callback",{"_index":194,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":187,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":199,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":177,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["charalampidi",{"_index":490,"title":{},"body":{"index.html":{}}}],["charg",{"_index":507,"title":{},"body":{"license.html":{}}}],["check",{"_index":569,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["claim",{"_index":542,"title":{},"body":{"license.html":{}}}],["class",{"_index":17,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{}}}],["cli",{"_index":352,"title":{},"body":{"index.html":{}}}],["client",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["client';impl",{"_index":578,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["code",{"_index":383,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["cofig",{"_index":473,"title":{},"body":{"index.html":{}}}],["come",{"_index":432,"title":{},"body":{"index.html":{}}}],["comment",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":592,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compat",{"_index":220,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["compil",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":585,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":197,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compon",{"_index":409,"title":{},"body":{"index.html":{}}}],["condit",{"_index":524,"title":{},"body":{"license.html":{}}}],["config",{"_index":153,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["configur",{"_index":109,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":111,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["consol",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["console.log(`receiv",{"_index":430,"title":{},"body":{"index.html":{}}}],["console.log(`stomp",{"_index":458,"title":{},"body":{"index.html":{}}}],["const",{"_index":395,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["constructor(_conf",{"_index":98,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":149,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":91,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{}}}],["consum",{"_index":433,"title":{},"body":{"index.html":{}}}],["contract",{"_index":547,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":602,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":485,"title":{},"body":{"index.html":{}}}],["control",{"_index":467,"title":{},"body":{"index.html":{}}}],["convert",{"_index":445,"title":{},"body":{"index.html":{}}}],["copi",{"_index":401,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["copyright",{"_index":501,"title":{},"body":{"license.html":{}}}],["correctli",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["correspond",{"_index":453,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":263,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":579,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["critic",{"_index":337,"title":{},"body":{"index.html":{}}}],["curiou",{"_index":481,"title":{},"body":{"index.html":{}}}],["current",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":543,"title":{},"body":{"license.html":{}}}],["deal",{"_index":512,"title":{},"body":{"license.html":{}}}],["debug",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["declar",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":494,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":491,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["defaultconfig",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["definit",{"_index":560,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":219,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demo",{"_index":371,"title":{},"body":{"index.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":396,"title":{},"body":{"index.html":{}}}],["demo/tree/sockj",{"_index":225,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["demonstr",{"_index":372,"title":{},"body":{"index.html":{}}}],["depend",{"_index":188,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["descript",{"_index":107,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["detail",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["develop",{"_index":597,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":86,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["dimitri",{"_index":489,"title":{},"body":{"index.html":{}}}],["directli",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["disconnect",{"_index":297,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["disconnetstomprandensur",{"_index":272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":301,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":236,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docto",{"_index":605,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["documentation/sock",{"_index":379,"title":{},"body":{"index.html":{}}}],["don't",{"_index":581,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["done",{"_index":302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["due",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["emul",{"_index":584,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":114,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["ensurestompconnect",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":303,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":452,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":291,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["es6",{"_index":163,"title":{},"body":{"injectables/StompService.html":{}}}],["establish",{"_index":460,"title":{},"body":{"index.html":{}}}],["etc",{"_index":420,"title":{},"body":{"index.html":{}}}],["even",{"_index":477,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["event",{"_index":538,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":497,"title":{},"body":{"index.html":{}}}],["exactli",{"_index":340,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["export",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":531,"title":{},"body":{"license.html":{}}}],["extend",{"_index":22,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{}}}],["extens",{"_index":319,"title":{},"body":{"index.html":{}}}],["fail",{"_index":595,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":399,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":373,"title":{},"body":{"index.html":{}}}],["few",{"_index":469,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["filter",{"_index":419,"title":{},"body":{"index.html":{}}}],["find",{"_index":346,"title":{},"body":{"index.html":{}}}],["finnigan",{"_index":487,"title":{},"body":{"index.html":{}}}],["fit",{"_index":534,"title":{},"body":{"license.html":{}}}],["follow",{"_index":325,"title":{},"body":{"index.html":{},"license.html":{}}}],["forcedisconnect",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["form",{"_index":572,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["format",{"_index":182,"title":{},"body":{"changelog.html":{}}}],["forward",{"_index":324,"title":{},"body":{"index.html":{}}}],["frame",{"_index":193,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":400,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":583,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":42,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":522,"title":{},"body":{"license.html":{}}}],["futur",{"_index":246,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["gener",{"_index":353,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["get",{"_index":175,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":255,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["go",{"_index":323,"title":{},"body":{"index.html":{}}}],["grant",{"_index":506,"title":{},"body":{"license.html":{}}}],["guest",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["hack",{"_index":596,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":156,"title":{},"body":{"injectables/StompService.html":{}}}],["hard",{"_index":312,"title":{},"body":{"index.html":{}}}],["hash",{"_index":398,"title":{},"body":{"index.html":{}}}],["head",{"_index":350,"title":{},"body":{"index.html":{}}}],["header",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["headers.t",{"_index":559,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["heart",{"_index":587,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_in",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_out",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["help",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["herebi",{"_index":505,"title":{},"body":{"license.html":{}}}],["holder",{"_index":540,"title":{},"body":{"license.html":{}}}],["host",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["host:str",{"_index":118,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":374,"title":{},"body":{"index.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":392,"title":{},"body":{"index.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":570,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://github.com/stomp",{"_index":222,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://stomp",{"_index":205,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":414,"title":{},"body":{"index.html":{}}}],["https://www.rabbitmq.com/web",{"_index":388,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":586,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["impli",{"_index":532,"title":{},"body":{"license.html":{}}}],["import",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["improv",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":515,"title":{},"body":{"license.html":{}}}],["incom",{"_index":125,"title":{},"body":{"injectables/StompConfig.html":{}}}],["inconsist",{"_index":349,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":571,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":478,"title":{},"body":{"index.html":{}}}],["initi",{"_index":171,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["initstomp",{"_index":472,"title":{},"body":{"index.html":{}}}],["inject",{"_index":105,"title":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["injection.html",{"_index":393,"title":{},"body":{"index.html":{}}}],["instal",{"_index":360,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["installor",{"_index":603,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["instanc",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":201,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["interest",{"_index":459,"title":{},"body":{"index.html":{}}}],["intern",{"_index":436,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["interv",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["involv",{"_index":498,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":358,"title":{},"body":{"index.html":{}}}],["issu",{"_index":345,"title":{},"body":{"index.html":{}}}],["jimi",{"_index":488,"title":{},"body":{"index.html":{}}}],["js",{"_index":214,"title":{"additional-documentation/sock-js.html":{}},"body":{"changelog.html":{}}}],["js.github.io/ng2",{"_index":206,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js.github.io/stomp",{"_index":574,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.html",{"_index":380,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":241,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js/ng4",{"_index":223,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["js/stomp",{"_index":366,"title":{},"body":{"index.html":{}}}],["json",{"_index":444,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":446,"title":{},"body":{"index.html":{}}}],["jump",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["karma",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["kind",{"_index":530,"title":{},"body":{"license.html":{}}}],["kumar",{"_index":492,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabil",{"_index":544,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":541,"title":{},"body":{"license.html":{}}}],["librari",{"_index":161,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["licens",{"_index":499,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":516,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":348,"title":{},"body":{"index.html":{}}}],["lint",{"_index":606,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["liter",{"_index":561,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":397,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{}}}],["log",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["login",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["longer",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":405,"title":{},"body":{"index.html":{}}}],["main",{"_index":244,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maintain",{"_index":334,"title":{},"body":{"index.html":{}}}],["make",{"_index":227,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["manag",{"_index":327,"title":{},"body":{"index.html":{}}}],["mani",{"_index":590,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["manual",{"_index":170,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["map",{"_index":418,"title":{},"body":{"index.html":{}}}],["map((stat",{"_index":455,"title":{},"body":{"index.html":{}}}],["master",{"_index":328,"title":{},"body":{"index.html":{}}}],["match",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["mean",{"_index":591,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["merchant",{"_index":533,"title":{},"body":{"license.html":{}}}],["merg",{"_index":243,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["messag",{"_index":158,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["message');pleas",{"_index":441,"title":{},"body":{"index.html":{}}}],["message.bodi",{"_index":428,"title":{},"body":{"index.html":{}}}],["method",{"_index":25,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{}}}],["michel",{"_index":495,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["miscellan",{"_index":290,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":500,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":402,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":482,"title":{},"body":{"index.html":{}}}],["msg_bodi",{"_index":431,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":313,"title":{},"body":{"index.html":{}}}],["mystomprservic",{"_index":20,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":90,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["need",{"_index":382,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["neeed",{"_index":119,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{}}}],["ngmodul",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":537,"title":{},"body":{"license.html":{}}}],["note",{"_index":442,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["notic",{"_index":525,"title":{},"body":{"license.html":{}}}],["now",{"_index":192,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":237,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["number",{"_index":123,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["object",{"_index":110,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":164,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["obtain",{"_index":509,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":594,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["octob",{"_index":335,"title":{},"body":{"index.html":{}}}],["offer",{"_index":339,"title":{},"body":{"index.html":{}}}],["old",{"_index":568,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":589,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["onc",{"_index":483,"title":{},"body":{"index.html":{}}}],["oper",{"_index":417,"title":{},"body":{"index.html":{}}}],["option",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":549,"title":{},"body":{"license.html":{}}}],["out",{"_index":551,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{}}}],["outgo",{"_index":127,"title":{},"body":{"injectables/StompConfig.html":{}}}],["overview",{"_index":553,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":288,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":256,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["paramet",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["part",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":535,"title":{},"body":{"license.html":{}}}],["pass",{"_index":120,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["passcod",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["per",{"_index":451,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":504,"title":{},"body":{"license.html":{}}}],["permit",{"_index":521,"title":{},"body":{"license.html":{}}}],["person",{"_index":508,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":423,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":130,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["plugin",{"_index":386,"title":{},"body":{"index.html":{}}}],["portion",{"_index":528,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":229,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["potenti",{"_index":484,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":381,"title":{},"body":{"index.html":{}}}],["process",{"_index":466,"title":{},"body":{"index.html":{}}}],["product",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":251,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promonet",{"_index":496,"title":{},"body":{"index.html":{}}}],["properti",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{}}}],["provid",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["publish",{"_index":261,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["publish(queuenam",{"_index":438,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":536,"title":{},"body":{"license.html":{}}}],["queu",{"_index":479,"title":{},"body":{"index.html":{}}}],["queue",{"_index":159,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["quit",{"_index":318,"title":{},"body":{"index.html":{}}}],["r.servic",{"_index":155,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":122,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["rais",{"_index":344,"title":{},"body":{"index.html":{}}}],["read",{"_index":377,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["readi",{"_index":465,"title":{},"body":{"index.html":{}}}],["readm",{"_index":151,"title":{},"body":{"injectables/StompService.html":{}}}],["realli",{"_index":311,"title":{},"body":{"index.html":{}}}],["reap",{"_index":407,"title":{},"body":{"index.html":{}}}],["recent",{"_index":343,"title":{},"body":{"index.html":{}}}],["reconnect",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["reconnect_delay",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["refer",{"_index":131,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["releas",{"_index":215,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["report",{"_index":356,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":108,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":342,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":403,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":514,"title":{},"body":{"license.html":{}}}],["result",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["return",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["right",{"_index":517,"title":{},"body":{"license.html":{}}}],["run",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["rxj",{"_index":320,"title":{},"body":{"index.html":{}}}],["sam",{"_index":486,"title":{},"body":{"index.html":{}}}],["same",{"_index":314,"title":{},"body":{"index.html":{}}}],["sampl",{"_index":152,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["saveimport",{"_index":577,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":361,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":326,"title":{},"body":{"index.html":{}}}],["second",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["see",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sell",{"_index":520,"title":{},"body":{"license.html":{}}}],["semant",{"_index":411,"title":{},"body":{"index.html":{}}}],["send",{"_index":443,"title":{},"body":{"index.html":{}}}],["server",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["servic",{"_index":146,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["set",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["setup",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{}}}],["sever",{"_index":391,"title":{},"body":{"index.html":{}}}],["shall",{"_index":526,"title":{},"body":{"license.html":{}}}],["similar",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["simul",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["sock",{"_index":566,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":43,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":40,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":510,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{}}}],["special",{"_index":341,"title":{},"body":{"index.html":{}}}],["specif",{"_index":165,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["specifi",{"_index":404,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stomp",{"_index":293,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../stomp.service.factory.t",{"_index":298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sockjs.md.html",{"_index":576,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/specs/app/app.module.t",{"_index":5,"title":{},"body":{"modules/AppModule.html":{}}}],["src/specs/app/services/helpers.t",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.t",{"_index":21,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:42",{"_index":99,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:50",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:63",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/stomp",{"_index":280,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/stomp.config.t",{"_index":106,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":129,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":116,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":124,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":126,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":128,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":113,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":144,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":150,"title":{},"body":{"injectables/StompService.html":{}}}],["start",{"_index":176,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":448,"title":{},"body":{"index.html":{}}}],["stomp",{"_index":132,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp.config",{"_index":154,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.html",{"_index":389,"title":{},"body":{"index.html":{}}}],["stomp.j",{"_index":160,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/ng2",{"_index":305,"title":{},"body":{"index.html":{}}}],["stomp/stomp.j",{"_index":148,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":189,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":434,"title":{},"body":{"index.html":{}}}],["stomp_subscript",{"_index":424,"title":{},"body":{"index.html":{}}}],["stomp_subscription.map((messag",{"_index":427,"title":{},"body":{"index.html":{}}}],["stompconfig",{"_index":39,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompconfigservic",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["stomphead",{"_index":115,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":224,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompjs/addit",{"_index":378,"title":{},"body":{"index.html":{}}}],["stompjs/changelog.html",{"_index":351,"title":{},"body":{"index.html":{}}}],["stompjs/index.html",{"_index":370,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":369,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":439,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":207,"title":{},"body":{"changelog.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":416,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":368,"title":{},"body":{"index.html":{}}}],["stompjsthi",{"_index":364,"title":{},"body":{"index.html":{}}}],["stomprservic",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompservic",{"_index":38,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompservice.st",{"_index":449,"title":{},"body":{"index.html":{}}}],["stompservicefactori",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate[st",{"_index":456,"title":{},"body":{"index.html":{}}}],["stream",{"_index":167,"title":{},"body":{"injectables/StompService.html":{}}}],["streamlin",{"_index":573,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["structur",{"_index":258,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":309,"title":{},"body":{"index.html":{}}}],["sub",{"_index":426,"title":{},"body":{"index.html":{}}}],["subject",{"_index":523,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":518,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":157,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["subscribe((msg_bodi",{"_index":429,"title":{},"body":{"index.html":{}}}],["subscribe((statu",{"_index":457,"title":{},"body":{"index.html":{}}}],["subscribe(queuenam",{"_index":415,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":437,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":527,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":316,"title":{},"body":{"index.html":{}}}],["success",{"_index":480,"title":{},"body":{"index.html":{}}}],["super",{"_index":172,"title":{},"body":{"injectables/StompService.html":{}}}],["super(_conf",{"_index":93,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["support",{"_index":217,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["switch",{"_index":196,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["tabl",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["techniqu",{"_index":463,"title":{},"body":{"index.html":{}}}],["templat",{"_index":421,"title":{},"body":{"index.html":{}}}],["test",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["testb",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["this._stompservice.config",{"_index":475,"title":{},"body":{"index.html":{}}}],["this._stompservice.connectobserv",{"_index":461,"title":{},"body":{"index.html":{}}}],["this._stompservice.initandconnect",{"_index":476,"title":{},"body":{"index.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":440,"title":{},"body":{"index.html":{}}}],["this._stompservice.st",{"_index":454,"title":{},"body":{"index.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":425,"title":{},"body":{"index.html":{}}}],["this.client.ws.clos",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":173,"title":{},"body":{"injectables/StompService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":474,"title":{},"body":{"index.html":{}}}],["this.initandconnect",{"_index":174,"title":{},"body":{"injectables/StompService.html":{}}}],["those",{"_index":593,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["though",{"_index":580,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":464,"title":{},"body":{"index.html":{}}}],["time",{"_index":331,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["tort",{"_index":548,"title":{},"body":{"license.html":{}}}],["travi",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":296,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["ts",{"_index":239,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["type",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":557,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":198,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typic",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unabl",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["uncom",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undefin",{"_index":300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undergon",{"_index":321,"title":{},"body":{"index.html":{}}}],["underli",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unit",{"_index":599,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unsubscrib",{"_index":435,"title":{},"body":{"index.html":{}}}],["updat",{"_index":186,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["url",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["us",{"_index":147,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["usag",{"_index":367,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["user",{"_index":376,"title":{},"body":{"index.html":{}}}],["user/password",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["usevalu",{"_index":406,"title":{},"body":{"index.html":{}}}],["usual",{"_index":462,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["valu",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["vari",{"_index":412,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":267,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":180,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":162,"title":{},"body":{"injectables/StompService.html":{}}}],["viaclass",{"_index":390,"title":{},"body":{"index.html":{}}}],["virtual",{"_index":121,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["wait",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["waitforreceipt",{"_index":191,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":169,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":529,"title":{},"body":{"license.html":{}}}],["watch",{"_index":447,"title":{},"body":{"index.html":{}}}],["way",{"_index":231,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["web",{"_index":385,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["websocket/codo/extra/doc",{"_index":575,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["well",{"_index":359,"title":{},"body":{"index.html":{}}}],["whether",{"_index":545,"title":{},"body":{"license.html":{}}}],["wire",{"_index":168,"title":{},"body":{"injectables/StompService.html":{}}}],["without",{"_index":513,"title":{},"body":{"license.html":{}}}],["work",{"_index":357,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["worri",{"_index":582,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":310,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{}}}],["yarn",{"_index":362,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["yarnto",{"_index":604,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["yourclass",{"_index":471,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specs/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [\n  ],\n  bootstrap: []\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:63\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/stomp.service.factory.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:50\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAngular 6\n\nIt will have version numbers in 6.x.x format.\n\nAngular 2/4/5\n\nIt will have version numbers in 4.x.x format.\n\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/stompjs : ^4.0.0 >=4.0.2\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\nAngular 2/4/5 \nAngular 6 \nAn Angular (Angular2, Angular4, Angular5, Angular6 ...) style wrapper for @stomp/stompjs.\nVersion Compatibility\nWhile we tried really hard to support multiple Angular versions with same release -\nactually succeeded for Anguar 2/4/5, it is not possible for Angular 6. This library\nmakes quite extensive use of rxjs which has undergone breaking changes in Angular 6.\nGoing forward following numbering scheme will be followed:\n\n6.x.x - managed in master branch, will only support Angular 6 - use dependency like \"^6.0.0\" \n4.x.x - managed in angular4 branch, will support Angular 2/4/5 - use dependency like \"^4.0.0\"\n\nFor the time being both versions will be maintained. From October 2018, only critical\nupdates will be applied to 4.x.x releases.\nAs of now both versions offer exactly same APIs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nSee https://github.com/stomp-js/ng4-stompjs-demo for a working sample\nusing Angular4 and Angular CLI\nSee https://github.com/stomp-js/ng2-stompjs-demo for a working sample\nusing Angular2 and Angular CLI. This version also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompHeaders   (src/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
