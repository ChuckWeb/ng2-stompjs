var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.371,1,1.871]],["body/modules/AppModule.html",[0,1.718,1,2.877,2,1.718,3,1.487,4,0.822,5,3.519,6,1.71,7,0.057,8,4.318,9,3.519,10,2.811,11,4.318,12,2.344,13,3.519,14,2.344,15,3.519,16,1.487,17,0.696,18,0.045,19,0.045]],["title/classes/MyStompRService.html",[17,0.555,20,1.593]],["body/classes/MyStompRService.html",[2,0.979,3,0.847,4,0.468,6,1.414,7,0.057,16,1.739,17,0.693,18,0.031,19,0.031,20,1.674,21,1.138,22,2.333,23,1.71,24,0.635,25,2.743,26,2.191,27,3.288,28,1.138,29,2.006,30,2.442,31,1.987,32,1.71,33,2.797,34,2.797,35,2.797,36,1.632,37,2.797,38,0.806,39,1.054,40,1.138,41,1.602,42,1.602,43,1.479,44,1.138,45,1.282,46,1.441,47,0.979,48,2.358,49,1.71,50,1.336,51,1.674,52,1.441,53,1.138,54,0.847,55,1.138,56,1.602,57,1.336,58,1.602,59,0.979,60,1.081,61,1.886,62,0.979,63,1.441,64,1.441,65,0.979,66,1.674,67,0.979,68,0.979,69,1.441,70,1.441,71,1.739,72,1.71,73,0.979,74,1.109,75,0.979,76,0.979,77,0.979,78,1.441,79,0.979,80,0.979,81,0.979,82,0.979,83,0.979,84,0.979,85,0.847,86,0.979,87,1.602,88,1.138,89,1.138,90,1.138,91,0.979,92,0.979,93,1.138,94,1.336,95,1.336,96,1.602,97,2.358,98,1.336,99,1.602]],["title/classes/MyStompService.html",[17,0.555,93,1.593]],["body/classes/MyStompService.html",[2,0.951,3,0.823,4,0.455,6,1.394,7,0.057,16,1.718,17,0.681,18,0.03,19,0.03,20,1.105,21,1.105,22,2.294,23,1.41,24,0.617,25,2.71,26,2.16,27,3.249,28,1.639,30,2.417,31,1.953,32,1.681,33,2.75,34,2.75,35,2.75,36,1.609,37,2.75,38,0.94,39,1.163,40,1.105,41,1.556,42,1.556,43,1.454,44,1.105,45,1.26,46,1.41,47,0.951,48,2.308,49,1.681,50,1.298,51,1.639,52,1.41,53,1.105,54,0.823,55,1.105,56,1.556,57,1.298,58,1.556,59,0.951,60,1.058,61,1.859,62,0.951,63,1.41,64,1.41,65,0.951,66,1.639,67,0.951,68,0.951,69,1.41,70,1.41,71,1.718,72,1.681,73,0.951,74,1.091,75,0.951,76,0.951,77,0.951,78,1.41,79,0.951,80,0.951,81,0.951,82,0.951,83,0.951,84,0.951,85,0.823,86,0.951,87,1.556,88,1.105,89,1.105,90,1.105,91,0.951,92,0.951,93,1.639,94,1.298,95,1.925,96,1.556,97,2.308,98,1.298,99,1.556,100,1.298,101,1.948,102,1.948,103,0.951,104,0.951,105,0.713,106,1.298,107,1.948]],["title/injectables/StompConfig.html",[39,0.767,108,0.89]],["body/injectables/StompConfig.html",[2,0.766,3,0.663,4,0.367,6,0.897,7,0.057,12,1.046,16,0.663,17,0.31,18,0.026,19,0.026,24,0.497,28,2.221,32,1.197,36,1.439,38,0.669,39,0.669,43,1.035,44,1.39,45,0.897,49,1.912,50,1.633,52,1.197,53,1.39,54,1.035,55,1.39,60,1.498,61,2.172,62,1.197,63,1.197,64,1.197,65,1.197,67,1.663,68,1.663,69,1.912,70,1.912,71,1.788,72,2.066,73,1.663,74,1.241,75,1.663,76,1.197,77,1.197,78,1.663,79,1.197,80,1.197,81,1.197,82,1.197,83,1.197,84,1.197,85,1.035,86,1.663,91,1.912,103,1.197,105,1.434,108,0.955,109,1.254,110,1.254,111,2.451,112,1.39,113,2.27,114,1.439,115,3.015,116,1.57,117,1.958,118,1.933,119,1.57,120,2.725,121,2.451,122,2.451,123,1.39,124,2.451,125,2.721,126,2.898,127,1.57,128,2.451,129,1.57,130,2.451,131,1.57,132,1.57,133,1.39,134,1.958,135,1.71,136,1.633,137,1.035,138,1.958,139,1.933,140,1.39,141,2.451,142,1.633,143,2.451,144,2.451,145,1.958,146,1.958]],["title/injectables/StompService.html",[38,0.767,108,0.89]],["body/injectables/StompService.html",[2,1.246,3,1.078,4,0.596,6,1.464,7,0.057,12,1.7,16,1.078,17,0.504,18,0.037,19,0.037,22,1.7,23,1.953,26,1.987,28,1.447,36,1.078,38,0.956,39,1.175,40,1.987,47,1.71,74,1.11,100,2.665,103,1.246,104,1.246,105,0.934,106,1.7,108,1.267,110,2.798,112,2.269,133,1.447,135,2.442,139,2.269,147,2.038,148,2.798,149,2.442,150,1.819,151,3.502,152,3.502,153,2.551,154,3.502,155,1.987,156,2.798,157,2.551,158,2.551,159,2.551,160,1.7,161,2.798,162,2.038,163,2.551,164,1.7,165,2.551,166,2.551,167,2.038,168,2.551,169,2.551,170,2.551,171,2.551,172,2.038,173,1.447,174,2.551,175,2.551,176,2.551]],["title/changelog.html",[177,1.595,178,1.595,179,1.595]],["body/changelog.html",[3,1.02,4,0.564,7,0.041,18,0.035,19,0.035,38,0.659,39,0.659,43,1.02,54,1.02,59,1.646,60,1.422,74,0.765,85,1.425,105,1.235,108,0.765,112,1.913,114,1.425,117,1.929,118,1.37,120,1.609,123,1.37,126,1.609,134,1.929,137,1.641,149,1.37,150,1.425,155,1.37,160,1.609,173,2.204,179,1.609,180,2.415,181,3.534,182,3.372,183,1.897,184,1.609,185,1.929,186,2.415,187,3.372,188,3.372,189,2.415,190,2.415,191,2.247,192,1.929,193,2.694,194,4.205,195,1.929,196,1.609,197,2.415,198,3.372,199,3.372,200,1.609,201,1.929,202,2.415,203,2.415,204,2.415,205,2.415,206,2.415,207,1.929,208,2.415,209,2.415,210,1.929,211,1.929,212,2.415,213,2.694,214,2.589,215,2.415,216,1.929,217,1.609,218,2.415,219,2.247,220,1.609,221,2.247,222,1.609,223,2.415,224,2.415,225,2.415,226,1.37,227,1.929,228,1.929,229,2.415,230,2.415,231,2.415,232,2.415,233,1.929,234,1.37,235,2.415,236,1.929,237,2.415,238,1.929,239,2.415,240,1.929,241,2.694,242,2.415,243,1.929,244,2.415,245,2.415,246,2.415,247,2.415,248,1.929,249,2.415,250,2.415,251,2.415,252,1.929,253,1.37,254,2.415,255,1.929,256,2.415,257,2.415,258,1.609,259,1.929]],["title/coverage.html",[260,2.985]],["body/coverage.html",[4,0.671,7,0.055,17,0.751,18,0.04,19,0.04,20,1.631,21,2.666,23,1.403,38,0.785,39,0.785,45,1.767,46,1.403,51,1.631,52,1.403,71,2.111,93,1.631,105,1.052,108,1.346,109,2.296,137,1.214,147,2.296,260,2.296,261,2.874,262,2.874,263,2.296,264,2.529,265,3.032,266,4.997,267,2.296,268,3.395,269,2.296,270,2.296,271,2.296,272,2.874,273,2.874,274,2.874,275,2.874,276,2.296,277,1.915,278,2.874,279,4.249,280,2.874,281,2.874,282,2.874,283,2.874,284,2.874]],["title/dependencies.html",[183,1.636,285,2.393]],["body/dependencies.html",[7,0.052,18,0.049,19,0.049,183,1.973,184,2.693,185,3.228,286,4.041,287,3.228]],["title/miscellaneous/enumerations.html",[288,0.758,289,2.677]],["body/miscellaneous/enumerations.html",[7,0.048,18,0.048,19,0.048,24,1.214,30,2.174,114,1.619,135,2.174,149,2.174,226,2.174,277,2.554,288,1.214,289,3.062,290,4.546,291,3.062,292,4.546,293,3.833,294,3.062,295,3.062]],["title/miscellaneous/functions.html",[45,1.227,288,0.758]],["body/miscellaneous/functions.html",[7,0.054,18,0.042,19,0.042,21,1.795,24,1.002,38,1.215,45,1.158,46,2.173,51,2.525,95,2.108,98,2.108,103,2.289,104,2.289,106,3.124,268,2.527,269,3.227,270,3.227,271,3.227,276,3.227,288,1.002,296,4.45,297,4.45,298,4.689,299,3.164,300,4.954,301,3.164,302,3.164]],["title/index.html",[24,0.758,177,1.595,178,1.595]],["body/index.html",[4,0.61,6,0.813,7,0.054,14,2.372,17,0.517,18,0.018,19,0.018,23,1.276,25,1.136,26,0.571,30,0.571,31,0.968,32,0.833,36,0.721,38,0.972,39,0.972,40,1.259,43,0.938,47,1.977,49,0.491,54,0.425,55,0.571,59,0.491,60,0.957,61,1.551,62,0.491,63,0.833,64,0.833,65,0.491,66,0.968,67,0.491,68,0.491,69,0.833,70,1.276,71,1.104,72,1.084,73,0.491,74,1.128,75,0.491,76,0.833,77,0.491,78,0.833,79,0.491,80,0.833,81,0.491,82,0.491,83,0.491,84,0.833,85,0.425,86,0.491,88,0.571,89,0.571,90,0.571,91,0.491,92,0.491,94,1.136,100,0.671,104,0.833,108,0.828,112,2.02,114,1.504,118,0.968,120,2.372,123,0.571,125,1.362,126,1.136,133,0.968,135,2.105,136,1.741,137,1.104,138,2.087,139,0.968,140,0.571,142,1.479,148,1.773,149,0.968,150,1.504,155,2.242,156,1.773,160,1.948,161,2.704,162,2.336,164,0.671,167,1.773,172,1.362,173,1.482,179,0.671,181,0.804,183,0.833,184,1.479,191,1.136,192,0.804,193,0.804,196,0.671,200,2.372,201,2.844,207,0.804,213,2.538,214,0.671,216,1.362,217,0.671,219,2.472,220,1.741,221,2.558,222,0.671,226,0.968,227,1.362,228,0.804,234,0.571,238,1.773,241,0.804,248,0.804,253,0.571,255,0.804,258,1.136,259,1.362,287,0.804,294,0.804,295,0.804,303,2.219,304,2.219,305,1.006,306,1.006,307,1.006,308,1.006,309,1.006,310,1.006,311,1.006,312,1.006,313,1.006,314,1.006,315,1.006,316,1.006,317,1.006,318,1.006,319,2.219,320,0.804,321,1.006,322,1.006,323,1.006,324,2.087,325,1.006,326,1.006,327,1.741,328,1.006,329,1.362,330,1.006,331,1.006,332,1.006,333,1.706,334,0.804,335,1.006,336,1.006,337,1.006,338,2.924,339,1.006,340,2.219,341,1.706,342,3.385,343,1.006,344,1.362,345,1.006,346,1.006,347,1.006,348,1.006,349,2.704,350,2.336,351,1.706,352,1.006,353,1.006,354,1.006,355,1.006,356,1.006,357,1.006,358,1.006,359,1.006,360,1.006,361,1.006,362,1.006,363,1.362,364,2.219,365,1.006,366,1.006,367,1.006,368,0.804,369,0.671,370,0.804,371,1.006,372,1.006,373,1.006,374,1.006,375,1.006,376,1.006,377,1.006,378,1.706,379,1.006,380,1.006,381,1.006,382,1.006,383,1.006,384,1.006,385,1.006,386,1.006,387,1.006,388,1.006,389,1.006,390,1.006,391,1.006,392,1.006,393,1.706,394,1.006,395,1.706,396,1.006,397,1.006,398,1.006,399,1.006,400,1.006,401,1.006,402,1.362,403,1.006,404,1.006,405,1.706,406,0.804,407,1.006,408,1.006,409,1.006,410,1.006,411,1.006,412,0.804,413,1.706,414,1.006,415,1.006,416,1.706,417,1.006,418,1.706,419,2.613,420,1.706,421,1.006,422,1.006,423,1.006,424,1.706,425,1.006,426,1.006,427,1.006,428,1.006,429,1.006,430,1.006,431,1.006,432,1.006,433,1.006,434,0.804,435,1.006,436,1.706,437,1.006,438,1.006,439,1.006,440,1.136,441,1.006,442,1.006,443,1.006,444,1.006,445,1.006,446,1.006,447,1.006,448,1.006,449,0.804,450,1.706,451,1.006,452,1.006,453,1.006,454,1.006,455,1.006,456,1.006,457,1.006,458,1.006,459,1.006,460,1.006,461,1.006,462,1.006,463,0.804,464,0.804,465,1.006,466,1.006,467,1.006,468,1.006,469,1.006,470,1.006,471,0.671,472,0.804]],["title/license.html",[177,1.595,178,1.595,471,1.595]],["body/license.html",[4,0.66,7,0.039,14,1.882,18,0.039,19,0.039,57,1.882,114,1.193,137,1.193,150,1.585,233,2.256,240,2.256,258,1.882,368,2.256,369,2.991,370,2.256,402,2.256,463,2.256,464,2.256,471,1.882,472,2.256,473,4.213,474,2.825,475,2.825,476,3.752,477,2.825,478,2.825,479,2.825,480,3.752,481,2.825,482,5.038,483,2.825,484,3.752,485,4.213,486,2.825,487,4.213,488,2.997,489,2.825,490,2.825,491,2.825,492,2.825,493,2.825,494,2.825,495,2.825,496,2.825,497,3.752,498,3.752,499,2.825,500,2.825,501,3.752,502,2.825,503,2.825,504,2.825,505,2.825,506,2.825,507,2.825,508,2.825,509,2.825,510,2.825,511,2.825,512,2.825,513,2.825,514,2.825,515,2.825,516,2.825,517,2.825,518,2.825,519,2.825,520,2.825,521,2.825,522,2.825,523,2.256]],["title/modules.html",[0,1.825]],["body/modules.html",[0,2.003,1,2.733,7,0.05,18,0.05,19,0.05,524,4.102]],["title/overview.html",[525,2.985]],["body/overview.html",[0,1.964,7,0.049,17,0.795,18,0.049,19,0.049,108,1.274,525,3.212,526,4.021,527,4.021,528,4.021]],["title/miscellaneous/typealiases.html",[288,0.758,529,3.351]],["body/miscellaneous/typealiases.html",[7,0.048,18,0.048,19,0.048,24,1.22,60,1.41,105,1.778,118,2.755,277,2.566,288,1.22,291,3.076,530,3.851,531,4.559,532,3.851,533,3.851]],["title/miscellaneous/variables.html",[264,2.233,288,0.758]],["body/miscellaneous/variables.html",[7,0.055,18,0.045,19,0.045,24,1.12,74,1.371,92,1.725,105,1.585,113,3.25,140,2.456,263,2.823,264,2.355,265,4.068,267,2.823,288,1.12,534,3.534,535,3.534,536,4.329,537,3.534]],["title/additional-documentation/sock-js.html",[210,1.666,253,1.183,440,1.389,538,2.085]],["body/additional-documentation/sock-js.html",[6,0.701,7,0.054,10,1.531,16,0.809,17,0.379,18,0.03,19,0.03,31,1.087,32,1.844,36,1.205,39,1.031,43,2.108,44,1.619,45,1.383,46,1.844,47,0.936,49,1.844,52,0.936,53,1.087,54,0.809,59,1.393,60,1.045,61,1.972,62,0.936,63,1.393,64,1.393,65,0.936,66,1.619,67,0.936,68,0.936,69,1.393,70,1.393,71,1.596,72,1.665,73,0.936,74,1.08,75,0.936,76,1.393,77,0.936,78,1.393,79,0.936,80,0.936,81,0.936,82,1.393,83,1.393,84,1.393,85,0.809,86,0.936,88,1.087,89,1.087,90,1.087,91,0.936,92,0.936,103,0.936,104,0.936,113,1.277,114,0.809,123,1.619,133,1.619,136,1.277,139,1.087,140,1.087,145,1.531,146,1.531,150,1.706,155,1.087,164,2.517,173,1.087,191,1.277,195,1.531,196,1.277,200,1.901,211,2.279,214,2.691,217,1.277,219,1.277,220,1.277,221,1.277,222,1.277,226,1.087,234,1.087,243,1.531,324,1.531,327,1.901,334,2.279,344,1.531,349,2.279,350,2.279,363,1.531,369,1.277,406,1.531,412,2.279,434,1.531,449,1.531,488,2.279,539,1.916,540,1.916,541,1.531,542,1.916,543,1.916,544,1.916,545,1.916,546,2.853,547,2.853,548,2.853,549,1.916,550,1.916,551,1.916,552,1.916,553,1.916,554,1.916,555,1.916,556,1.916,557,1.916,558,1.916,559,1.916,560,1.916,561,2.853,562,1.916,563,1.916,564,1.916,565,1.916,566,2.853,567,2.853,568,1.916,569,1.531,570,1.916,571,2.853,572,1.916,573,1.916,574,1.916]],["title/additional-documentation/contributing.html",[253,1.358,440,1.595,575,1.912]],["body/additional-documentation/contributing.html",[4,0.855,7,0.054,18,0.046,19,0.046,137,1.547,142,2.947,150,1.547,183,1.787,234,2.696,236,2.924,252,2.924,320,2.924,327,2.439,329,2.924,523,2.924,541,2.924,569,2.924,575,2.924,576,3.661,577,3.661,578,3.661,579,4.423]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["0",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["0.3.0",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":205,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":204,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":197,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":190,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":180,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":526,"title":{},"body":{"overview.html":{}}}],["1/2",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["2",{"_index":528,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":321,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["20000",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["2017",{"_index":475,"title":{},"body":{"license.html":{}}}],["23/23",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":527,"title":{},"body":{"overview.html":{}}}],["33",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":287,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.0.2",{"_index":185,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["5",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["5.0.0",{"_index":322,"title":{},"body":{"index.html":{}}}],["50",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["7/7",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["_conf",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_stompservic",{"_index":378,"title":{},"body":{"index.html":{}}}],["abil",{"_index":199,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{}}}],["action",{"_index":518,"title":{},"body":{"license.html":{}}}],["activ",{"_index":354,"title":{},"body":{"index.html":{}}}],["actual",{"_index":413,"title":{},"body":{"index.html":{}}}],["ad",{"_index":198,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":330,"title":{},"body":{"index.html":{}}}],["addit",{"_index":440,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"index.html":{}}}],["addition",{"_index":332,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":570,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["affect",{"_index":574,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["alias",{"_index":530,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":195,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["altern",{"_index":144,"title":{},"body":{"injectables/StompConfig.html":{}}}],["and/or",{"_index":491,"title":{},"body":{"license.html":{}}}],["angular",{"_index":213,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/cor",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["angular/platform",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["angular2",{"_index":148,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["angular4",{"_index":304,"title":{},"body":{"index.html":{}}}],["angular5",{"_index":305,"title":{},"body":{"index.html":{}}}],["api",{"_index":259,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app_initi",{"_index":227,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":389,"title":{},"body":{"index.html":{}}}],["applic",{"_index":539,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appreci",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["aris",{"_index":522,"title":{},"body":{"license.html":{}}}],["around",{"_index":572,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["assign",{"_index":442,"title":{},"body":{"index.html":{}}}],["associ",{"_index":483,"title":{},"body":{"license.html":{}}}],["assum",{"_index":351,"title":{},"body":{"index.html":{}}}],["astha",{"_index":465,"title":{},"body":{"index.html":{}}}],["async",{"_index":391,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":168,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["author",{"_index":511,"title":{},"body":{"license.html":{}}}],["auto",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["background",{"_index":362,"title":{},"body":{"index.html":{}}}],["base",{"_index":381,"title":{},"body":{"index.html":{}}}],["beat",{"_index":560,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["befor",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["behaviorsubject",{"_index":421,"title":{},"body":{"index.html":{}}}],["below",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":376,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":115,"title":{},"body":{"injectables/StompConfig.html":{}}}],["bootstrap",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["broken",{"_index":314,"title":{},"body":{"index.html":{}}}],["broker",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["brows",{"_index":524,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/sock-js.html":{}}}],["browsermodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{}}}],["bundl",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":474,"title":{},"body":{"license.html":{}}}],["call",{"_index":342,"title":{},"body":{"index.html":{}}}],["callback",{"_index":189,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":182,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":194,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":179,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["charalampidi",{"_index":462,"title":{},"body":{"index.html":{}}}],["charg",{"_index":479,"title":{},"body":{"license.html":{}}}],["check",{"_index":541,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["claim",{"_index":514,"title":{},"body":{"license.html":{}}}],["class",{"_index":17,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{}}}],["cli",{"_index":319,"title":{},"body":{"index.html":{}}}],["client",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["client';impl",{"_index":550,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["code",{"_index":350,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["cofig",{"_index":445,"title":{},"body":{"index.html":{}}}],["come",{"_index":401,"title":{},"body":{"index.html":{}}}],["comment",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":564,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compat",{"_index":217,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["compil",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":557,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":192,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compon",{"_index":377,"title":{},"body":{"index.html":{}}}],["condit",{"_index":496,"title":{},"body":{"license.html":{}}}],["config",{"_index":156,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["configur",{"_index":112,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":114,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["consol",{"_index":90,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["console.log(`receiv",{"_index":399,"title":{},"body":{"index.html":{}}}],["console.log(`stomp",{"_index":430,"title":{},"body":{"index.html":{}}}],["const",{"_index":363,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["constructor",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["constructor(_conf",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":152,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{}}}],["consum",{"_index":403,"title":{},"body":{"index.html":{}}}],["contract",{"_index":519,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":575,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":457,"title":{},"body":{"index.html":{}}}],["control",{"_index":439,"title":{},"body":{"index.html":{}}}],["convert",{"_index":416,"title":{},"body":{"index.html":{}}}],["copi",{"_index":369,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["copyright",{"_index":473,"title":{},"body":{"license.html":{}}}],["correctli",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["correspond",{"_index":425,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":260,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":551,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["curiou",{"_index":453,"title":{},"body":{"index.html":{}}}],["current",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":515,"title":{},"body":{"license.html":{}}}],["deal",{"_index":484,"title":{},"body":{"license.html":{}}}],["debug",{"_index":91,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["declar",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":466,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":463,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["defaultconfig",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["definit",{"_index":532,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":216,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demo",{"_index":338,"title":{},"body":{"index.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":364,"title":{},"body":{"index.html":{}}}],["demo/tree/sockj",{"_index":222,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["demonstr",{"_index":339,"title":{},"body":{"index.html":{}}}],["depend",{"_index":183,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["descript",{"_index":110,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["detail",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["develop",{"_index":569,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["dimitri",{"_index":461,"title":{},"body":{"index.html":{}}}],["directli",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["disconnect",{"_index":295,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["disconnetstomprandensur",{"_index":269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":233,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docto",{"_index":578,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["documentation/sock",{"_index":346,"title":{},"body":{"index.html":{}}}],["don't",{"_index":553,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["done",{"_index":300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["due",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["emul",{"_index":556,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":117,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["ensurestompconnect",{"_index":270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":301,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":424,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":289,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["es6",{"_index":166,"title":{},"body":{"injectables/StompService.html":{}}}],["establish",{"_index":432,"title":{},"body":{"index.html":{}}}],["etc",{"_index":388,"title":{},"body":{"index.html":{}}}],["even",{"_index":449,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["event",{"_index":510,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":469,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["export",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":503,"title":{},"body":{"license.html":{}}}],["extend",{"_index":22,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{}}}],["fail",{"_index":567,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":367,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":340,"title":{},"body":{"index.html":{}}}],["few",{"_index":441,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["filter",{"_index":387,"title":{},"body":{"index.html":{}}}],["find",{"_index":313,"title":{},"body":{"index.html":{}}}],["finnigan",{"_index":459,"title":{},"body":{"index.html":{}}}],["fit",{"_index":506,"title":{},"body":{"license.html":{}}}],["follow",{"_index":402,"title":{},"body":{"index.html":{},"license.html":{}}}],["forcedisconnect",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["form",{"_index":544,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["frame",{"_index":188,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":368,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":555,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":45,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":494,"title":{},"body":{"license.html":{}}}],["futur",{"_index":243,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["gener",{"_index":320,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["get",{"_index":177,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":252,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["grant",{"_index":478,"title":{},"body":{"license.html":{}}}],["guest",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["hack",{"_index":568,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":159,"title":{},"body":{"injectables/StompService.html":{}}}],["hard",{"_index":357,"title":{},"body":{"index.html":{}}}],["hash",{"_index":366,"title":{},"body":{"index.html":{}}}],["head",{"_index":317,"title":{},"body":{"index.html":{}}}],["header",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["headers.t",{"_index":531,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["heart",{"_index":559,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_in",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_out",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["help",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["herebi",{"_index":477,"title":{},"body":{"license.html":{}}}],["holder",{"_index":512,"title":{},"body":{"license.html":{}}}],["host",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["host:str",{"_index":121,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":341,"title":{},"body":{"index.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":360,"title":{},"body":{"index.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":542,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://github.com/stomp",{"_index":219,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://stomp",{"_index":200,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":382,"title":{},"body":{"index.html":{}}}],["https://www.rabbitmq.com/web",{"_index":355,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":558,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["impli",{"_index":504,"title":{},"body":{"license.html":{}}}],["import",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["improv",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":487,"title":{},"body":{"license.html":{}}}],["incom",{"_index":128,"title":{},"body":{"injectables/StompConfig.html":{}}}],["inconsist",{"_index":316,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":543,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":450,"title":{},"body":{"index.html":{}}}],["initi",{"_index":173,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["initstomp",{"_index":444,"title":{},"body":{"index.html":{}}}],["inject",{"_index":108,"title":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["injection.html",{"_index":361,"title":{},"body":{"index.html":{}}}],["instal",{"_index":327,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["installor",{"_index":576,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["instanc",{"_index":146,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":196,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["interest",{"_index":431,"title":{},"body":{"index.html":{}}}],["intern",{"_index":406,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["interv",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["involv",{"_index":470,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":325,"title":{},"body":{"index.html":{}}}],["issu",{"_index":312,"title":{},"body":{"index.html":{}}}],["jimi",{"_index":460,"title":{},"body":{"index.html":{}}}],["js",{"_index":210,"title":{"additional-documentation/sock-js.html":{}},"body":{"changelog.html":{}}}],["js.github.io/ng2",{"_index":201,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js.github.io/stomp",{"_index":546,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.html",{"_index":347,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":238,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js/ng4",{"_index":220,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["js/stomp",{"_index":333,"title":{},"body":{"index.html":{}}}],["json",{"_index":415,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":417,"title":{},"body":{"index.html":{}}}],["jump",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["karma",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["kind",{"_index":502,"title":{},"body":{"license.html":{}}}],["kumar",{"_index":464,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabil",{"_index":516,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":513,"title":{},"body":{"license.html":{}}}],["librari",{"_index":164,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["licens",{"_index":471,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":488,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":315,"title":{},"body":{"index.html":{}}}],["lint",{"_index":579,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["liter",{"_index":533,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":365,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{}}}],["log",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["login",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["longer",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":373,"title":{},"body":{"index.html":{}}}],["main",{"_index":241,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maintain",{"_index":422,"title":{},"body":{"index.html":{}}}],["make",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["mani",{"_index":562,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["manual",{"_index":172,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["map",{"_index":386,"title":{},"body":{"index.html":{}}}],["map((stat",{"_index":427,"title":{},"body":{"index.html":{}}}],["match",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["mean",{"_index":563,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["merchant",{"_index":505,"title":{},"body":{"license.html":{}}}],["merg",{"_index":240,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["messag",{"_index":161,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["message');pleas",{"_index":411,"title":{},"body":{"index.html":{}}}],["message.bodi",{"_index":397,"title":{},"body":{"index.html":{}}}],["method",{"_index":25,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{}}}],["michel",{"_index":467,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["miscellan",{"_index":288,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":472,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":370,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":454,"title":{},"body":{"index.html":{}}}],["msg_bodi",{"_index":400,"title":{},"body":{"index.html":{}}}],["mystomprservic",{"_index":20,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":93,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":99,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["need",{"_index":349,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["neeed",{"_index":122,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{}}}],["ngmodul",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":509,"title":{},"body":{"license.html":{}}}],["note",{"_index":412,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["notic",{"_index":497,"title":{},"body":{"license.html":{}}}],["now",{"_index":187,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":234,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["number",{"_index":126,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["object",{"_index":113,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":40,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["obtain",{"_index":481,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":566,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["old",{"_index":540,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":561,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["onc",{"_index":455,"title":{},"body":{"index.html":{}}}],["oper",{"_index":385,"title":{},"body":{"index.html":{}}}],["option",{"_index":106,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":521,"title":{},"body":{"license.html":{}}}],["out",{"_index":523,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{}}}],["outgo",{"_index":130,"title":{},"body":{"injectables/StompConfig.html":{}}}],["overview",{"_index":525,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":285,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":253,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["paramet",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["part",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":507,"title":{},"body":{"license.html":{}}}],["pass",{"_index":123,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["passcod",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["peer",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":423,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":476,"title":{},"body":{"license.html":{}}}],["permit",{"_index":493,"title":{},"body":{"license.html":{}}}],["person",{"_index":480,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":392,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["plugin",{"_index":353,"title":{},"body":{"index.html":{}}}],["portion",{"_index":500,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":226,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["potenti",{"_index":456,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":348,"title":{},"body":{"index.html":{}}}],["process",{"_index":438,"title":{},"body":{"index.html":{}}}],["product",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":248,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promonet",{"_index":468,"title":{},"body":{"index.html":{}}}],["properti",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{}}}],["provid",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["publish",{"_index":258,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["publish(queuenam",{"_index":408,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":508,"title":{},"body":{"license.html":{}}}],["queu",{"_index":451,"title":{},"body":{"index.html":{}}}],["queue",{"_index":162,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["r.servic",{"_index":158,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":125,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["rais",{"_index":311,"title":{},"body":{"index.html":{}}}],["read",{"_index":344,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["readi",{"_index":437,"title":{},"body":{"index.html":{}}}],["readm",{"_index":154,"title":{},"body":{"injectables/StompService.html":{}}}],["reap",{"_index":375,"title":{},"body":{"index.html":{}}}],["recent",{"_index":310,"title":{},"body":{"index.html":{}}}],["reconnect",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["reconnect_delay",{"_index":86,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["refer",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["releas",{"_index":211,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["report",{"_index":323,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":111,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":309,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":371,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":486,"title":{},"body":{"license.html":{}}}],["result",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["return",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["right",{"_index":489,"title":{},"body":{"license.html":{}}}],["run",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["rxjs/add/observable/of",{"_index":42,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["rxjs/observ",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["sam",{"_index":458,"title":{},"body":{"index.html":{}}}],["sampl",{"_index":155,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["saveimport",{"_index":549,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":328,"title":{},"body":{"index.html":{}}}],["second",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["see",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sell",{"_index":492,"title":{},"body":{"license.html":{}}}],["semant",{"_index":379,"title":{},"body":{"index.html":{}}}],["send",{"_index":414,"title":{},"body":{"index.html":{}}}],["server",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["servic",{"_index":149,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["set",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["setup",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{}}}],["sever",{"_index":359,"title":{},"body":{"index.html":{}}}],["shall",{"_index":498,"title":{},"body":{"license.html":{}}}],["similar",{"_index":145,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["simul",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["sock",{"_index":538,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":43,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":482,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{}}}],["special",{"_index":308,"title":{},"body":{"index.html":{}}}],["specif",{"_index":167,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["specifi",{"_index":372,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stomp",{"_index":291,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../stomp.service.factory.t",{"_index":296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sockjs.md.html",{"_index":548,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/specs/app/app.module.t",{"_index":5,"title":{},"body":{"modules/AppModule.html":{}}}],["src/specs/app/services/helpers.t",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.t",{"_index":21,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:44",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:52",{"_index":107,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:65",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/stomp",{"_index":277,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/stomp.config.t",{"_index":109,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":132,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":119,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":127,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":129,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":131,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":116,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":147,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":153,"title":{},"body":{"injectables/StompService.html":{}}}],["start",{"_index":178,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":293,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":419,"title":{},"body":{"index.html":{}}}],["stomp",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp.config",{"_index":157,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.html",{"_index":356,"title":{},"body":{"index.html":{}}}],["stomp.j",{"_index":163,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/ng2",{"_index":303,"title":{},"body":{"index.html":{}}}],["stomp/stomp.j",{"_index":151,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":184,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":404,"title":{},"body":{"index.html":{}}}],["stomp_subscript",{"_index":393,"title":{},"body":{"index.html":{}}}],["stomp_subscription.map((messag",{"_index":396,"title":{},"body":{"index.html":{}}}],["stompconfig",{"_index":39,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompconfigservic",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["stomphead",{"_index":118,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":221,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompjs/addit",{"_index":345,"title":{},"body":{"index.html":{}}}],["stompjs/changelog.html",{"_index":318,"title":{},"body":{"index.html":{}}}],["stompjs/index.html",{"_index":337,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":336,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":409,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":384,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":335,"title":{},"body":{"index.html":{}}}],["stompjsthi",{"_index":331,"title":{},"body":{"index.html":{}}}],["stomprservic",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompservic",{"_index":38,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompservice.st",{"_index":420,"title":{},"body":{"index.html":{}}}],["stompservicefactori",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":98,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate[st",{"_index":428,"title":{},"body":{"index.html":{}}}],["stream",{"_index":169,"title":{},"body":{"injectables/StompService.html":{}}}],["streamlin",{"_index":545,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":120,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["structur",{"_index":255,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":306,"title":{},"body":{"index.html":{}}}],["sub",{"_index":395,"title":{},"body":{"index.html":{}}}],["subject",{"_index":495,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":490,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":160,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["subscribe((msg_bodi",{"_index":398,"title":{},"body":{"index.html":{}}}],["subscribe((statu",{"_index":429,"title":{},"body":{"index.html":{}}}],["subscribe(queuenam",{"_index":383,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":407,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":499,"title":{},"body":{"license.html":{}}}],["success",{"_index":452,"title":{},"body":{"index.html":{}}}],["super",{"_index":174,"title":{},"body":{"injectables/StompService.html":{}}}],["super(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["support",{"_index":214,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["switch",{"_index":191,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["tabl",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["techniqu",{"_index":435,"title":{},"body":{"index.html":{}}}],["templat",{"_index":390,"title":{},"body":{"index.html":{}}}],["test",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["testb",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["this._stompservice.config",{"_index":447,"title":{},"body":{"index.html":{}}}],["this._stompservice.connectobserv",{"_index":433,"title":{},"body":{"index.html":{}}}],["this._stompservice.initandconnect",{"_index":448,"title":{},"body":{"index.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":410,"title":{},"body":{"index.html":{}}}],["this._stompservice.st",{"_index":426,"title":{},"body":{"index.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":394,"title":{},"body":{"index.html":{}}}],["this.client.ws.clos",{"_index":97,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":175,"title":{},"body":{"injectables/StompService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":446,"title":{},"body":{"index.html":{}}}],["this.initandconnect",{"_index":176,"title":{},"body":{"injectables/StompService.html":{}}}],["those",{"_index":565,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["though",{"_index":552,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":436,"title":{},"body":{"index.html":{}}}],["time",{"_index":573,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["tort",{"_index":520,"title":{},"body":{"license.html":{}}}],["travi",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":294,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["ts",{"_index":236,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["type",{"_index":105,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":529,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":193,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typic",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unabl",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["uncom",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undefin",{"_index":298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["underli",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unit",{"_index":571,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unsubscrib",{"_index":405,"title":{},"body":{"index.html":{}}}],["updat",{"_index":181,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["url",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["us",{"_index":150,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["usag",{"_index":334,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["user",{"_index":343,"title":{},"body":{"index.html":{}}}],["user/password",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["usevalu",{"_index":374,"title":{},"body":{"index.html":{}}}],["usual",{"_index":434,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["valu",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["vari",{"_index":380,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":264,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":207,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":165,"title":{},"body":{"injectables/StompService.html":{}}}],["viaclass",{"_index":358,"title":{},"body":{"index.html":{}}}],["virtual",{"_index":124,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["wait",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["waitforreceipt",{"_index":186,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":171,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":501,"title":{},"body":{"license.html":{}}}],["watch",{"_index":418,"title":{},"body":{"index.html":{}}}],["way",{"_index":228,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["web",{"_index":352,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["websocket/codo/extra/doc",{"_index":547,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["well",{"_index":326,"title":{},"body":{"index.html":{}}}],["whether",{"_index":517,"title":{},"body":{"license.html":{}}}],["wire",{"_index":170,"title":{},"body":{"injectables/StompService.html":{}}}],["without",{"_index":485,"title":{},"body":{"license.html":{}}}],["work",{"_index":324,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["worri",{"_index":554,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":307,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{}}}],["yarn",{"_index":329,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["yarnto",{"_index":577,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["yourclass",{"_index":443,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specs/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [\n  ],\n  bootstrap: []\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:65\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/stomp.service.factory.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:52\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer Dependencies\n    \n    \n        \n            @stomp/stompjs : ^4.0.0 >=4.0.2\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\n\nAn Angular (Angular2, Angular4, Angular5 ...) style wrapper for @stomp/stompjs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nSee https://github.com/stomp-js/ng4-stompjs-demo for a working sample\nusing Angular4 and Angular CLI\nSee https://github.com/stomp-js/ng2-stompjs-demo for a working sample\nusing Angular2 and Angular CLI. This version also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompHeaders   (src/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
