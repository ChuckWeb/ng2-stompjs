var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.371,1,1.871]],["body/modules/AppModule.html",[0,1.716,1,2.875,2,1.716,3,1.485,4,0.821,5,3.515,6,1.709,7,0.057,8,4.315,9,3.515,10,2.808,11,4.315,12,2.342,13,3.515,14,2.342,15,3.515,16,1.485,17,0.695,18,0.045,19,0.045]],["title/classes/MyStompRService.html",[17,0.555,20,1.593]],["body/classes/MyStompRService.html",[2,0.993,3,0.859,4,0.475,6,1.092,7,0.057,16,1.749,17,0.698,18,0.031,19,0.031,20,1.692,21,1.154,22,2.352,23,1.724,24,0.644,25,2.758,26,2.206,27,3.307,28,1.154,29,2.034,30,2.454,31,2.003,32,1.724,33,2.82,34,2.82,35,2.82,36,1.643,37,2.82,38,0.814,39,1.061,40,1.492,41,1.154,42,1.293,43,1.456,44,0.993,45,2.382,46,1.724,47,1.355,48,1.692,49,1.456,50,1.154,51,0.859,52,1.154,53,1.625,54,1.355,55,1.625,56,0.993,57,1.092,58,1.898,59,0.993,60,1.456,61,1.456,62,0.993,63,1.692,64,0.993,65,0.993,66,1.456,67,1.456,68,1.749,69,1.724,70,0.993,71,1.118,72,0.993,73,0.993,74,0.993,75,1.456,76,0.993,77,0.993,78,0.993,79,0.993,80,0.993,81,0.993,82,0.859,83,0.993,84,1.625,85,1.154,86,1.154,87,1.154,88,0.993,89,0.993,90,1.154,91,1.355,92,1.355,93,1.625,94,2.382,95,1.355,96,1.625]],["title/classes/MyStompService.html",[17,0.555,90,1.593]],["body/classes/MyStompService.html",[2,0.964,3,0.834,4,0.461,6,1.068,7,0.057,16,1.728,17,0.686,18,0.031,19,0.031,20,1.12,21,1.12,22,2.312,23,1.425,24,0.626,25,2.725,26,2.174,27,3.267,28,1.655,30,2.428,31,1.969,32,1.694,33,2.772,34,2.772,35,2.772,36,1.619,37,2.772,38,0.947,39,1.169,40,1.466,41,1.12,42,1.27,43,1.425,44,0.964,45,2.331,46,1.694,47,1.316,48,1.655,49,1.425,50,1.12,51,0.834,52,1.12,53,1.577,54,1.316,55,1.577,56,0.964,57,1.068,58,1.872,59,0.964,60,1.425,61,1.425,62,0.964,63,1.655,64,0.964,65,0.964,66,1.425,67,1.425,68,1.728,69,1.694,70,0.964,71,1.099,72,0.964,73,0.964,74,0.964,75,1.425,76,0.964,77,0.964,78,0.964,79,0.964,80,0.964,81,0.964,82,0.834,83,0.964,84,1.577,85,1.12,86,1.12,87,1.12,88,0.964,89,0.964,90,1.655,91,1.316,92,1.944,93,1.577,94,2.331,95,1.316,96,1.577,97,1.316,98,1.974,99,1.974,100,0.964,101,0.964,102,0.723,103,1.316,104,1.974]],["title/injectables/StompConfig.html",[39,0.767,105,0.89]],["body/injectables/StompConfig.html",[2,0.763,3,0.66,4,0.365,6,0.894,7,0.057,12,1.042,16,0.66,17,0.309,18,0.026,19,0.026,24,0.495,28,2.218,32,1.193,36,1.436,38,0.667,39,0.667,40,1.032,41,1.386,42,0.894,46,1.909,47,1.628,49,1.193,50,1.386,51,1.032,52,1.386,57,1.495,58,2.169,59,1.193,60,1.193,61,1.193,62,1.193,64,1.66,65,1.66,66,1.909,67,1.909,68,1.786,69,2.064,70,1.66,71,1.239,72,1.66,73,1.193,74,1.193,75,1.66,76,1.193,77,1.193,78,1.193,79,1.193,80,1.193,81,1.193,82,1.032,83,1.66,88,1.909,100,1.193,102,1.431,105,0.953,106,1.249,107,1.249,108,2.443,109,1.386,110,2.265,111,1.436,112,3.007,113,1.563,114,1.951,115,1.928,116,1.563,117,2.721,118,2.443,119,2.443,120,1.386,121,2.443,122,2.715,123,2.894,124,1.563,125,2.443,126,1.563,127,2.443,128,1.563,129,1.563,130,1.386,131,1.951,132,1.706,133,1.628,134,1.032,135,1.951,136,1.928,137,1.386,138,2.443,139,1.628,140,2.443,141,2.443,142,1.951,143,1.951]],["title/injectables/StompService.html",[38,0.767,105,0.89]],["body/injectables/StompService.html",[2,1.242,3,1.075,4,0.594,6,1.462,7,0.056,12,1.695,16,1.075,17,0.503,18,0.037,19,0.037,22,1.695,23,1.95,26,1.983,28,1.443,36,1.075,38,0.954,39,1.174,44,1.707,71,1.108,97,2.661,100,1.242,101,1.242,102,0.931,103,1.695,105,1.265,107,2.793,109,2.266,130,1.443,132,2.44,136,2.266,144,2.032,145,2.793,146,2.44,147,1.817,148,3.496,149,3.496,150,2.544,151,3.496,152,1.983,153,2.793,154,2.544,155,2.544,156,2.544,157,1.695,158,2.793,159,2.032,160,2.544,161,1.695,162,2.544,163,2.544,164,2.793,165,2.032,166,2.544,167,2.544,168,2.544,169,2.544,170,2.032,171,1.443,172,2.544,173,2.544,174,2.544]],["title/changelog.html",[175,1.595,176,1.595,177,1.595]],["body/changelog.html",[3,1.017,4,0.563,7,0.041,18,0.035,19,0.035,38,0.657,39,0.657,40,1.017,51,1.017,56,1.643,57,1.42,71,0.763,82,1.422,102,1.232,105,0.763,109,1.909,111,1.422,114,1.924,115,1.366,117,1.605,120,1.366,123,1.605,131,1.924,134,1.639,146,1.366,147,1.422,152,1.366,157,1.605,171,2.201,177,1.605,178,2.408,179,3.53,180,3.366,181,1.894,182,1.605,183,1.924,184,2.408,185,3.366,186,3.366,187,2.408,188,2.408,189,2.242,190,1.924,191,2.688,192,4.2,193,1.924,194,1.605,195,2.408,196,3.366,197,3.366,198,1.605,199,1.924,200,2.408,201,2.408,202,2.408,203,2.408,204,2.408,205,1.924,206,2.408,207,2.408,208,1.924,209,1.924,210,2.408,211,2.688,212,2.585,213,2.408,214,1.924,215,1.605,216,2.408,217,2.242,218,1.605,219,2.242,220,1.605,221,2.408,222,2.408,223,2.408,224,1.366,225,1.924,226,1.924,227,2.408,228,2.408,229,2.408,230,2.408,231,1.924,232,1.366,233,2.408,234,1.924,235,2.408,236,1.924,237,2.408,238,1.924,239,2.688,240,2.408,241,1.924,242,2.408,243,2.408,244,2.408,245,2.408,246,1.924,247,2.408,248,2.408,249,2.408,250,1.924,251,1.366,252,2.408,253,1.924,254,2.408,255,2.408,256,1.605,257,1.924]],["title/coverage.html",[258,2.985]],["body/coverage.html",[4,0.67,7,0.055,17,0.75,18,0.04,19,0.04,20,1.627,21,2.664,23,1.4,38,0.783,39,0.783,42,1.766,43,1.4,48,1.627,49,1.4,68,2.11,90,1.627,102,1.05,105,1.345,106,2.291,134,1.212,144,2.291,258,2.291,259,2.868,260,2.868,261,2.291,262,2.525,263,3.028,264,4.994,265,2.291,266,3.391,267,2.291,268,2.291,269,2.291,270,2.868,271,2.868,272,2.868,273,2.868,274,2.291,275,1.911,276,2.868,277,4.245,278,2.868,279,2.868,280,2.868,281,2.868,282,2.868]],["title/dependencies.html",[181,1.636,283,2.393]],["body/dependencies.html",[7,0.052,18,0.049,19,0.049,181,1.982,182,2.705,183,3.243,284,3.243]],["title/miscellaneous/enumerations.html",[285,0.758,286,2.677]],["body/miscellaneous/enumerations.html",[7,0.048,18,0.048,19,0.048,24,1.213,30,2.173,111,1.618,132,2.173,146,2.173,224,2.173,275,2.552,285,1.213,286,3.059,287,4.544,288,3.059,289,4.544,290,3.83,291,3.059,292,3.059]],["title/miscellaneous/functions.html",[42,1.227,285,0.758]],["body/miscellaneous/functions.html",[7,0.054,18,0.042,19,0.042,21,1.792,24,1.001,38,1.214,42,1.156,43,2.171,48,2.523,92,2.105,95,2.105,100,2.288,101,2.288,103,3.122,266,2.523,267,3.224,268,3.224,269,3.224,274,3.224,285,1.001,293,4.447,294,4.447,295,4.686,296,3.159,297,4.952,298,3.159,299,3.159]],["title/index.html",[24,0.758,175,1.595,176,1.595]],["body/index.html",[4,0.608,6,0.81,7,0.054,14,2.367,17,0.515,18,0.018,19,0.018,23,1.272,25,1.132,26,0.568,30,0.568,31,0.964,32,0.829,36,0.718,38,0.97,39,0.97,40,0.934,44,1.974,46,0.489,51,0.423,52,0.568,56,0.489,57,0.954,58,1.547,59,0.489,60,0.829,61,0.829,62,0.489,63,0.964,64,0.489,65,0.489,66,0.829,67,1.272,68,1.1,69,1.08,70,0.489,71,1.126,72,0.489,73,0.829,74,0.489,75,0.829,76,0.489,77,0.829,78,0.489,79,0.489,80,0.489,81,0.829,82,0.423,83,0.489,85,0.568,86,0.568,87,0.568,88,0.489,89,0.489,91,1.132,97,0.667,101,0.829,105,0.825,109,2.016,111,1.501,115,0.964,117,2.367,120,0.568,122,1.357,123,1.132,130,0.964,132,2.101,133,1.736,134,1.1,135,2.081,136,0.964,137,0.568,139,1.473,145,1.767,146,0.964,147,1.501,152,2.238,153,1.767,157,1.943,158,2.698,159,2.329,161,0.667,164,1.767,165,1.767,170,1.357,171,1.478,177,0.667,179,0.8,181,0.829,182,1.473,189,1.132,190,0.8,191,0.8,194,0.667,198,2.367,199,2.838,205,0.8,211,2.531,212,0.667,214,1.357,215,0.667,217,2.467,218,1.736,219,2.553,220,0.667,224,0.964,225,1.357,226,0.8,232,0.568,236,1.767,239,0.8,246,0.8,251,0.568,253,0.8,256,1.132,257,1.357,284,0.8,291,0.8,292,0.8,300,2.212,301,2.212,302,1.002,303,1.002,304,1.002,305,1.002,306,1.002,307,1.002,308,1.002,309,1.002,310,1.002,311,1.002,312,1.002,313,1.002,314,1.002,315,1.002,316,2.212,317,0.8,318,1.002,319,1.002,320,1.002,321,2.081,322,1.002,323,1.002,324,1.736,325,1.002,326,1.357,327,1.002,328,1.002,329,1.002,330,1.698,331,0.8,332,1.002,333,1.002,334,1.002,335,2.916,336,1.002,337,2.212,338,1.698,339,3.377,340,1.002,341,1.357,342,1.002,343,1.002,344,1.002,345,1.002,346,2.698,347,2.329,348,1.698,349,1.002,350,1.002,351,1.002,352,1.002,353,1.002,354,1.002,355,1.002,356,1.002,357,1.002,358,1.002,359,1.002,360,1.357,361,2.212,362,1.002,363,1.002,364,1.002,365,0.8,366,0.667,367,0.8,368,1.002,369,1.002,370,1.002,371,1.002,372,1.002,373,1.002,374,1.002,375,1.698,376,1.002,377,1.002,378,1.002,379,1.002,380,1.002,381,1.002,382,1.002,383,1.002,384,1.002,385,1.002,386,1.002,387,1.002,388,1.002,389,1.002,390,1.698,391,1.002,392,1.698,393,1.002,394,1.002,395,1.002,396,1.002,397,1.002,398,1.002,399,1.357,400,1.002,401,1.002,402,1.698,403,0.8,404,1.002,405,1.002,406,1.002,407,1.002,408,1.002,409,0.8,410,1.698,411,1.002,412,1.002,413,1.698,414,1.002,415,1.698,416,2.605,417,1.698,418,1.002,419,1.002,420,1.002,421,1.698,422,1.002,423,1.002,424,1.002,425,1.002,426,1.002,427,1.002,428,1.002,429,1.002,430,1.002,431,0.8,432,1.002,433,1.698,434,1.002,435,1.002,436,1.002,437,1.132,438,1.002,439,1.002,440,1.002,441,1.002,442,1.002,443,1.002,444,1.002,445,1.002,446,0.8,447,1.698,448,1.002,449,1.002,450,1.002,451,1.002,452,1.002,453,1.002,454,1.002,455,1.002,456,1.002,457,1.002,458,1.002,459,1.002,460,0.8,461,0.8,462,1.002,463,1.002,464,1.002,465,1.002,466,1.002,467,1.002,468,0.667,469,0.8]],["title/license.html",[175,1.595,176,1.595,468,1.595]],["body/license.html",[4,0.658,7,0.039,14,1.878,18,0.039,19,0.039,54,1.878,111,1.191,134,1.191,147,1.583,231,2.251,238,2.251,256,1.878,365,2.251,366,2.988,367,2.251,399,2.251,460,2.251,461,2.251,468,1.878,469,2.251,470,4.208,471,2.818,472,2.818,473,3.746,474,2.818,475,2.818,476,2.818,477,3.746,478,2.818,479,5.036,480,2.818,481,3.746,482,4.208,483,2.818,484,4.208,485,2.993,486,2.818,487,2.818,488,2.818,489,2.818,490,2.818,491,2.818,492,2.818,493,2.818,494,3.746,495,3.746,496,2.818,497,2.818,498,3.746,499,2.818,500,2.818,501,2.818,502,2.818,503,2.818,504,2.818,505,2.818,506,2.818,507,2.818,508,2.818,509,2.818,510,2.818,511,2.818,512,2.818,513,2.818,514,2.818,515,2.818,516,2.818,517,2.818,518,2.818,519,2.818,520,2.251]],["title/modules.html",[0,1.825]],["body/modules.html",[0,2.002,1,2.733,7,0.05,18,0.05,19,0.05,521,4.101]],["title/overview.html",[522,2.985]],["body/overview.html",[0,1.963,7,0.049,17,0.795,18,0.049,19,0.049,105,1.274,522,3.211,523,4.02,524,4.02,525,4.02]],["title/miscellaneous/typealiases.html",[285,0.758,526,3.351]],["body/miscellaneous/typealiases.html",[7,0.048,18,0.048,19,0.048,24,1.219,57,1.409,102,1.777,115,2.754,275,2.564,285,1.219,288,3.074,527,3.848,528,4.557,529,3.848,530,3.848]],["title/miscellaneous/variables.html",[262,2.233,285,0.758]],["body/miscellaneous/variables.html",[7,0.055,18,0.045,19,0.045,24,1.118,71,1.371,89,1.724,102,1.584,110,3.249,137,2.454,261,2.82,262,2.352,263,4.067,265,2.82,285,1.118,531,3.53,532,3.53,533,4.326,534,3.53]],["title/additional-documentation/sock-js.html",[208,1.666,251,1.183,437,1.389,535,2.085]],["body/additional-documentation/sock-js.html",[6,0.699,7,0.054,10,1.525,16,0.807,17,0.378,18,0.03,19,0.03,31,1.083,32,1.841,36,1.202,39,1.029,40,2.106,41,1.614,42,1.38,43,1.841,44,0.932,46,1.841,49,0.932,50,1.083,51,0.807,56,1.39,57,1.042,58,1.969,59,0.932,60,1.39,61,1.39,62,0.932,63,1.614,64,0.932,65,0.932,66,1.39,67,1.39,68,1.593,69,1.661,70,0.932,71,1.078,72,0.932,73,1.39,74,0.932,75,1.39,76,0.932,77,0.932,78,0.932,79,1.39,80,1.39,81,1.39,82,0.807,83,0.932,85,1.083,86,1.083,87,1.083,88,0.932,89,0.932,100,0.932,101,0.932,110,1.272,111,0.807,120,1.614,130,1.614,133,1.272,136,1.083,137,1.083,142,1.525,143,1.525,147,1.704,152,1.083,161,2.512,171,1.083,189,1.272,193,1.525,194,1.272,198,1.896,209,2.273,212,2.687,215,1.272,217,1.272,218,1.272,219,1.272,220,1.272,224,1.083,232,1.083,241,1.525,321,1.525,324,1.896,331,2.273,341,1.525,346,2.273,347,2.273,360,1.525,366,1.272,403,1.525,409,2.273,431,1.525,446,1.525,485,2.273,536,1.909,537,1.909,538,1.525,539,1.909,540,1.909,541,1.909,542,1.909,543,2.846,544,2.846,545,2.846,546,1.909,547,1.909,548,1.909,549,1.909,550,1.909,551,1.909,552,1.909,553,1.909,554,1.909,555,1.909,556,1.909,557,1.909,558,2.846,559,1.909,560,1.909,561,1.909,562,1.909,563,2.846,564,2.846,565,1.909,566,1.525,567,1.909,568,2.846,569,1.909,570,1.909,571,1.909]],["title/additional-documentation/contributing.html",[251,1.358,437,1.595,572,1.912]],["body/additional-documentation/contributing.html",[4,0.854,7,0.054,18,0.046,19,0.046,134,1.545,139,2.945,147,1.545,181,1.786,232,2.695,234,2.921,250,2.921,317,2.921,324,2.437,326,2.921,520,2.921,538,2.921,566,2.921,572,2.921,573,3.657,574,3.657,575,3.657,576,4.42]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["0",{"_index":68,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["0.3.0",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["0.4.2",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["0.4.3",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":195,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":188,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":178,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":523,"title":{},"body":{"overview.html":{}}}],["1/2",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":84,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["2",{"_index":525,"title":{},"body":{"overview.html":{}}}],["2.4.0",{"_index":318,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":74,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["20000",{"_index":73,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["2017",{"_index":472,"title":{},"body":{"license.html":{}}}],["23/23",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":524,"title":{},"body":{"overview.html":{}}}],["33",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":284,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["4.0.2",{"_index":183,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["5",{"_index":82,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["5.0.0",{"_index":319,"title":{},"body":{"index.html":{}}}],["50",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":81,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["7/7",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["_conf",{"_index":92,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["_stompservic",{"_index":375,"title":{},"body":{"index.html":{}}}],["abil",{"_index":197,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":54,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"license.html":{}}}],["action",{"_index":515,"title":{},"body":{"license.html":{}}}],["activ",{"_index":351,"title":{},"body":{"index.html":{}}}],["actual",{"_index":410,"title":{},"body":{"index.html":{}}}],["ad",{"_index":196,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":327,"title":{},"body":{"index.html":{}}}],["addit",{"_index":437,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"index.html":{}}}],["addition",{"_index":329,"title":{},"body":{"index.html":{}}}],["adjust",{"_index":567,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["affect",{"_index":571,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["alias",{"_index":527,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":193,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["altern",{"_index":141,"title":{},"body":{"injectables/StompConfig.html":{}}}],["and/or",{"_index":488,"title":{},"body":{"license.html":{}}}],["angular",{"_index":211,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/cor",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["angular/platform",{"_index":9,"title":{},"body":{"modules/AppModule.html":{}}}],["angular2",{"_index":145,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["angular4",{"_index":301,"title":{},"body":{"index.html":{}}}],["angular5",{"_index":302,"title":{},"body":{"index.html":{}}}],["api",{"_index":257,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app_initi",{"_index":225,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":386,"title":{},"body":{"index.html":{}}}],["applic",{"_index":536,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["appmodul",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["appreci",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["aris",{"_index":519,"title":{},"body":{"license.html":{}}}],["around",{"_index":569,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["assign",{"_index":439,"title":{},"body":{"index.html":{}}}],["associ",{"_index":480,"title":{},"body":{"license.html":{}}}],["assum",{"_index":348,"title":{},"body":{"index.html":{}}}],["astha",{"_index":462,"title":{},"body":{"index.html":{}}}],["async",{"_index":388,"title":{},"body":{"index.html":{}}}],["asynchron",{"_index":166,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":78,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["author",{"_index":508,"title":{},"body":{"license.html":{}}}],["auto",{"_index":79,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["background",{"_index":359,"title":{},"body":{"index.html":{}}}],["base",{"_index":378,"title":{},"body":{"index.html":{}}}],["beat",{"_index":557,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["befor",{"_index":77,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["behaviorsubject",{"_index":418,"title":{},"body":{"index.html":{}}}],["below",{"_index":45,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["benefit",{"_index":373,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":112,"title":{},"body":{"injectables/StompConfig.html":{}}}],["bootstrap",{"_index":15,"title":{},"body":{"modules/AppModule.html":{}}}],["broken",{"_index":311,"title":{},"body":{"index.html":{}}}],["broker",{"_index":133,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["brows",{"_index":521,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/sock-js.html":{}}}],["browsermodul",{"_index":8,"title":{},"body":{"modules/AppModule.html":{}}}],["bundl",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":471,"title":{},"body":{"license.html":{}}}],["call",{"_index":339,"title":{},"body":{"index.html":{}}}],["callback",{"_index":187,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":180,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":192,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":177,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["charalampidi",{"_index":459,"title":{},"body":{"index.html":{}}}],["charg",{"_index":476,"title":{},"body":{"license.html":{}}}],["check",{"_index":538,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["claim",{"_index":511,"title":{},"body":{"license.html":{}}}],["class",{"_index":17,"title":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/sock-js.html":{}}}],["cli",{"_index":316,"title":{},"body":{"index.html":{}}}],["client",{"_index":41,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["client';impl",{"_index":547,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["close",{"_index":30,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["code",{"_index":347,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["cofig",{"_index":442,"title":{},"body":{"index.html":{}}}],["come",{"_index":398,"title":{},"body":{"index.html":{}}}],["comment",{"_index":53,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["commun",{"_index":561,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compat",{"_index":215,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["compil",{"_index":207,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":554,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["compliant",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":190,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compon",{"_index":374,"title":{},"body":{"index.html":{}}}],["condit",{"_index":493,"title":{},"body":{"license.html":{}}}],["config",{"_index":153,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["configur",{"_index":109,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["connect",{"_index":111,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["consol",{"_index":87,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["console.log(`receiv",{"_index":396,"title":{},"body":{"index.html":{}}}],["console.log(`stomp",{"_index":427,"title":{},"body":{"index.html":{}}}],["const",{"_index":360,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["constructor(_conf",{"_index":98,"title":{},"body":{"classes/MyStompService.html":{}}}],["constructor(config",{"_index":149,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":91,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{}}}],["consum",{"_index":400,"title":{},"body":{"index.html":{}}}],["contract",{"_index":516,"title":{},"body":{"license.html":{}}}],["contribut",{"_index":572,"title":{"additional-documentation/contributing.html":{}},"body":{"additional-documentation/contributing.html":{}}}],["contributor",{"_index":454,"title":{},"body":{"index.html":{}}}],["control",{"_index":436,"title":{},"body":{"index.html":{}}}],["convert",{"_index":413,"title":{},"body":{"index.html":{}}}],["copi",{"_index":366,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{}}}],["copyright",{"_index":470,"title":{},"body":{"license.html":{}}}],["correctli",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["correspond",{"_index":422,"title":{},"body":{"index.html":{}}}],["coverag",{"_index":258,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":548,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["curiou",{"_index":450,"title":{},"body":{"index.html":{}}}],["current",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":512,"title":{},"body":{"license.html":{}}}],["deal",{"_index":481,"title":{},"body":{"license.html":{}}}],["debug",{"_index":88,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["declar",{"_index":13,"title":{},"body":{"modules/AppModule.html":{}}}],["deep",{"_index":463,"title":{},"body":{"index.html":{}}}],["deepak",{"_index":460,"title":{},"body":{"index.html":{},"license.html":{}}}],["default",{"_index":137,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["defaultconfig",{"_index":48,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defin",{"_index":28,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["definit",{"_index":529,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":214,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["demo",{"_index":335,"title":{},"body":{"index.html":{}}}],["demo/blob/master/src/app/app.module.t",{"_index":361,"title":{},"body":{"index.html":{}}}],["demo/tree/sockj",{"_index":220,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["demonstr",{"_index":336,"title":{},"body":{"index.html":{}}}],["depend",{"_index":181,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["descript",{"_index":107,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["detail",{"_index":135,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["develop",{"_index":566,"title":{},"body":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["diagnost",{"_index":86,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["dimitri",{"_index":458,"title":{},"body":{"index.html":{}}}],["directli",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":69,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["disconnect",{"_index":292,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["disconnetstomprandensur",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["disconnetstomprandensure(stompservic",{"_index":296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distribut",{"_index":231,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["docto",{"_index":575,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["document",{"_index":134,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["documentation/sock",{"_index":343,"title":{},"body":{"index.html":{}}}],["don't",{"_index":550,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["done",{"_index":297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["due",{"_index":34,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["emul",{"_index":553,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["enabl",{"_index":114,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["ensurestompconnect",{"_index":268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestompconnected(stompservic",{"_index":298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensurestomprdisconnect",{"_index":269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensurestomprdisconnected(stompservic",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":421,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":286,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":35,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["es6",{"_index":163,"title":{},"body":{"injectables/StompService.html":{}}}],["establish",{"_index":429,"title":{},"body":{"index.html":{}}}],["etc",{"_index":385,"title":{},"body":{"index.html":{}}}],["even",{"_index":446,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["event",{"_index":507,"title":{},"body":{"license.html":{}}}],["everyon",{"_index":466,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":136,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["export",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"additional-documentation/sock-js.html":{}}}],["express",{"_index":500,"title":{},"body":{"license.html":{}}}],["extend",{"_index":22,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{}}}],["fail",{"_index":564,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["fals",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feel",{"_index":364,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":337,"title":{},"body":{"index.html":{}}}],["few",{"_index":438,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/contributing.html":{}}}],["filter",{"_index":384,"title":{},"body":{"index.html":{}}}],["find",{"_index":310,"title":{},"body":{"index.html":{}}}],["finnigan",{"_index":456,"title":{},"body":{"index.html":{}}}],["fit",{"_index":503,"title":{},"body":{"license.html":{}}}],["follow",{"_index":399,"title":{},"body":{"index.html":{},"license.html":{}}}],["forcedisconnect",{"_index":27,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["form",{"_index":541,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["frame",{"_index":186,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":365,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequent",{"_index":552,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["function",{"_index":42,"title":{"miscellaneous/functions.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["furnish",{"_index":491,"title":{},"body":{"license.html":{}}}],["futur",{"_index":241,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["gener",{"_index":317,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["get",{"_index":175,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":250,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["grant",{"_index":475,"title":{},"body":{"license.html":{}}}],["guest",{"_index":63,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["hack",{"_index":565,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["handl",{"_index":156,"title":{},"body":{"injectables/StompService.html":{}}}],["hard",{"_index":354,"title":{},"body":{"index.html":{}}}],["hash",{"_index":363,"title":{},"body":{"index.html":{}}}],["head",{"_index":314,"title":{},"body":{"index.html":{}}}],["header",{"_index":57,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/sock-js.html":{}}}],["headers.t",{"_index":528,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["heart",{"_index":556,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["heartbeat",{"_index":64,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_in",{"_index":70,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["heartbeat_out",{"_index":72,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["help",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["herebi",{"_index":474,"title":{},"body":{"license.html":{}}}],["holder",{"_index":509,"title":{},"body":{"license.html":{}}}],["host",{"_index":62,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["host:str",{"_index":118,"title":{},"body":{"injectables/StompConfig.html":{}}}],["http",{"_index":338,"title":{},"body":{"index.html":{}}}],["https://angular.io/docs/ts/latest/guide/depend",{"_index":357,"title":{},"body":{"index.html":{}}}],["https://en.wikipedia.org/wiki/websocket",{"_index":539,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["https://github.com/stomp",{"_index":217,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://stomp",{"_index":198,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["https://www.rabbitmq.com/stomp.html",{"_index":379,"title":{},"body":{"index.html":{}}}],["https://www.rabbitmq.com/web",{"_index":352,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":555,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["impli",{"_index":501,"title":{},"body":{"license.html":{}}}],["import",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["improv",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":484,"title":{},"body":{"license.html":{}}}],["incom",{"_index":125,"title":{},"body":{"injectables/StompConfig.html":{}}}],["inconsist",{"_index":313,"title":{},"body":{"index.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":2,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["inform",{"_index":540,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["initandconnect",{"_index":447,"title":{},"body":{"index.html":{}}}],["initi",{"_index":171,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["initstomp",{"_index":441,"title":{},"body":{"index.html":{}}}],["inject",{"_index":105,"title":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["injection.html",{"_index":358,"title":{},"body":{"index.html":{}}}],["instal",{"_index":324,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["installor",{"_index":573,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["instanc",{"_index":143,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["instead",{"_index":194,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["interest",{"_index":428,"title":{},"body":{"index.html":{}}}],["intern",{"_index":403,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["interv",{"_index":65,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["involv",{"_index":467,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":322,"title":{},"body":{"index.html":{}}}],["issu",{"_index":309,"title":{},"body":{"index.html":{}}}],["jimi",{"_index":457,"title":{},"body":{"index.html":{}}}],["js",{"_index":208,"title":{"additional-documentation/sock-js.html":{}},"body":{"changelog.html":{}}}],["js.github.io/ng2",{"_index":199,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js.github.io/stomp",{"_index":543,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["js.html",{"_index":344,"title":{},"body":{"index.html":{}}}],["js/ng2",{"_index":236,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js/ng4",{"_index":218,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["js/stomp",{"_index":330,"title":{},"body":{"index.html":{}}}],["json",{"_index":412,"title":{},"body":{"index.html":{}}}],["json.stringifi",{"_index":414,"title":{},"body":{"index.html":{}}}],["jump",{"_index":204,"title":{},"body":{"changelog.html":{}}}],["karma",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":59,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["kind",{"_index":499,"title":{},"body":{"license.html":{}}}],["kumar",{"_index":461,"title":{},"body":{"index.html":{},"license.html":{}}}],["liabil",{"_index":513,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":510,"title":{},"body":{"license.html":{}}}],["librari",{"_index":161,"title":{},"body":{"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["licens",{"_index":468,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":485,"title":{},"body":{"license.html":{},"additional-documentation/sock-js.html":{}}}],["link",{"_index":312,"title":{},"body":{"index.html":{}}}],["lint",{"_index":576,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["liter",{"_index":530,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["local",{"_index":362,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":140,"title":{},"body":{"injectables/StompConfig.html":{}}}],["log",{"_index":85,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["login",{"_index":60,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["longer",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":370,"title":{},"body":{"index.html":{}}}],["main",{"_index":239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maintain",{"_index":419,"title":{},"body":{"index.html":{}}}],["make",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["mani",{"_index":559,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["manual",{"_index":170,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["map",{"_index":383,"title":{},"body":{"index.html":{}}}],["map((stat",{"_index":424,"title":{},"body":{"index.html":{}}}],["match",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["mean",{"_index":560,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["merchant",{"_index":502,"title":{},"body":{"license.html":{}}}],["merg",{"_index":238,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["messag",{"_index":158,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["message');pleas",{"_index":408,"title":{},"body":{"index.html":{}}}],["message.bodi",{"_index":394,"title":{},"body":{"index.html":{}}}],["method",{"_index":25,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{}}}],["michel",{"_index":464,"title":{},"body":{"index.html":{}}}],["millisecond",{"_index":66,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["miscellan",{"_index":285,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":469,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifi",{"_index":367,"title":{},"body":{"index.html":{},"license.html":{}}}],["modul",{"_index":0,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":451,"title":{},"body":{"index.html":{}}}],["msg_bodi",{"_index":397,"title":{},"body":{"index.html":{}}}],["mystomprservic",{"_index":20,"title":{"classes/MyStompRService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservic",{"_index":90,"title":{"classes/MyStompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{}}}],["mystompservice(_conf",{"_index":96,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["name",{"_index":101,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["need",{"_index":346,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["neeed",{"_index":119,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":49,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"additional-documentation/sock-js.html":{}}}],["ngmodul",{"_index":11,"title":{},"body":{"modules/AppModule.html":{}}}],["noninfring",{"_index":506,"title":{},"body":{"license.html":{}}}],["note",{"_index":409,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["notic",{"_index":494,"title":{},"body":{"license.html":{}}}],["now",{"_index":185,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":232,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["number",{"_index":123,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["object",{"_index":110,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["observ",{"_index":164,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["obtain",{"_index":478,"title":{},"body":{"license.html":{}}}],["occasion",{"_index":563,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["old",{"_index":537,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["on",{"_index":558,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["onc",{"_index":452,"title":{},"body":{"index.html":{}}}],["oper",{"_index":382,"title":{},"body":{"index.html":{}}}],["option",{"_index":103,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":518,"title":{},"body":{"license.html":{}}}],["out",{"_index":520,"title":{},"body":{"license.html":{},"additional-documentation/contributing.html":{}}}],["outgo",{"_index":127,"title":{},"body":{"injectables/StompConfig.html":{}}}],["overview",{"_index":522,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":283,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":251,"title":{"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["paramet",{"_index":100,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["part",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":504,"title":{},"body":{"license.html":{}}}],["pass",{"_index":120,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["passcod",{"_index":61,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["per",{"_index":420,"title":{},"body":{"index.html":{}}}],["permiss",{"_index":473,"title":{},"body":{"license.html":{}}}],["permit",{"_index":490,"title":{},"body":{"license.html":{}}}],["person",{"_index":477,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":389,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":130,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["plugin",{"_index":350,"title":{},"body":{"index.html":{}}}],["portion",{"_index":497,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":224,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["potenti",{"_index":453,"title":{},"body":{"index.html":{}}}],["prerequisit",{"_index":345,"title":{},"body":{"index.html":{}}}],["process",{"_index":435,"title":{},"body":{"index.html":{}}}],["product",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":246,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promonet",{"_index":465,"title":{},"body":{"index.html":{}}}],["properti",{"_index":47,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{}}}],["provid",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["publish",{"_index":256,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["publish(queuenam",{"_index":405,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":505,"title":{},"body":{"license.html":{}}}],["queu",{"_index":448,"title":{},"body":{"index.html":{}}}],["queue",{"_index":159,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["r.servic",{"_index":155,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":122,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{}}}],["rais",{"_index":308,"title":{},"body":{"index.html":{}}}],["read",{"_index":341,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["readi",{"_index":434,"title":{},"body":{"index.html":{}}}],["readm",{"_index":151,"title":{},"body":{"injectables/StompService.html":{}}}],["reap",{"_index":372,"title":{},"body":{"index.html":{}}}],["recent",{"_index":307,"title":{},"body":{"index.html":{}}}],["reconnect",{"_index":80,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["reconnect_delay",{"_index":83,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["refer",{"_index":131,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{}}}],["releas",{"_index":209,"title":{},"body":{"changelog.html":{},"additional-documentation/sock-js.html":{}}}],["report",{"_index":320,"title":{},"body":{"index.html":{}}}],["repositori",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":108,"title":{},"body":{"injectables/StompConfig.html":{}}}],["request",{"_index":306,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":368,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":483,"title":{},"body":{"license.html":{}}}],["result",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["return",{"_index":36,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["right",{"_index":486,"title":{},"body":{"license.html":{}}}],["run",{"_index":139,"title":{},"body":{"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/contributing.html":{}}}],["sam",{"_index":455,"title":{},"body":{"index.html":{}}}],["sampl",{"_index":152,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["saveimport",{"_index":546,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["saveor",{"_index":325,"title":{},"body":{"index.html":{}}}],["second",{"_index":75,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["see",{"_index":44,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sell",{"_index":489,"title":{},"body":{"license.html":{}}}],["semant",{"_index":376,"title":{},"body":{"index.html":{}}}],["send",{"_index":411,"title":{},"body":{"index.html":{}}}],["server",{"_index":51,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["servic",{"_index":146,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["set",{"_index":67,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["setup",{"_index":138,"title":{},"body":{"injectables/StompConfig.html":{}}}],["sever",{"_index":356,"title":{},"body":{"index.html":{}}}],["shall",{"_index":495,"title":{},"body":{"license.html":{}}}],["similar",{"_index":142,"title":{},"body":{"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["simul",{"_index":33,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["sock",{"_index":535,"title":{"additional-documentation/sock-js.html":{}},"body":{}}],["socketprovid",{"_index":43,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/sock-js.html":{}}}],["sockj",{"_index":40,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":50,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"additional-documentation/sock-js.html":{}}}],["softwar",{"_index":479,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{}}}],["special",{"_index":305,"title":{},"body":{"index.html":{}}}],["specif",{"_index":165,"title":{},"body":{"injectables/StompService.html":{},"index.html":{}}}],["specifi",{"_index":369,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.t",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.t",{"_index":294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../stomp",{"_index":288,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../stomp.service.factory.t",{"_index":293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.t",{"_index":261,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/sockjs.md.html",{"_index":545,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["src/specs/app/app.module.t",{"_index":5,"title":{},"body":{"modules/AppModule.html":{}}}],["src/specs/app/services/helpers.t",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.t",{"_index":21,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:42",{"_index":99,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:50",{"_index":104,"title":{},"body":{"classes/MyStompService.html":{}}}],["src/specs/app/services/stomp.service.factory.ts:63",{"_index":29,"title":{},"body":{"classes/MyStompRService.html":{}}}],["src/stomp",{"_index":275,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/stomp.config.t",{"_index":106,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["src/stomp.config.ts:24",{"_index":129,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:31",{"_index":116,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:38",{"_index":124,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:46",{"_index":126,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:54",{"_index":128,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.config.ts:57",{"_index":113,"title":{},"body":{"injectables/StompConfig.html":{}}}],["src/stomp.service.t",{"_index":144,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["src/stomp.service.ts:20",{"_index":150,"title":{},"body":{"injectables/StompService.html":{}}}],["start",{"_index":176,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":416,"title":{},"body":{"index.html":{}}}],["stomp",{"_index":132,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp.config",{"_index":154,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.html",{"_index":353,"title":{},"body":{"index.html":{}}}],["stomp.j",{"_index":160,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/ng2",{"_index":300,"title":{},"body":{"index.html":{}}}],["stomp/stomp.j",{"_index":148,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":182,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["stomp/stompjs';unsubscrib",{"_index":401,"title":{},"body":{"index.html":{}}}],["stomp_subscript",{"_index":390,"title":{},"body":{"index.html":{}}}],["stomp_subscription.map((messag",{"_index":393,"title":{},"body":{"index.html":{}}}],["stompconfig",{"_index":39,"title":{"injectables/StompConfig.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompconfigservic",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["stomphead",{"_index":115,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":219,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["stompjs/addit",{"_index":342,"title":{},"body":{"index.html":{}}}],["stompjs/changelog.html",{"_index":315,"title":{},"body":{"index.html":{}}}],["stompjs/index.html",{"_index":334,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html",{"_index":333,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#publish",{"_index":406,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stomprservice.html#serverheadersobserv",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["stompjs/injectables/stomprservice.html#subscrib",{"_index":381,"title":{},"body":{"index.html":{}}}],["stompjs/injectables/stompservice.html",{"_index":332,"title":{},"body":{"index.html":{}}}],["stompjsthi",{"_index":328,"title":{},"body":{"index.html":{}}}],["stomprservic",{"_index":23,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompservic",{"_index":38,"title":{"injectables/StompService.html":{}},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompservice.st",{"_index":417,"title":{},"body":{"index.html":{}}}],["stompservicefactori",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompservicefactory(_conf",{"_index":95,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"miscellaneous/functions.html":{}}}],["stompstat",{"_index":287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate[st",{"_index":425,"title":{},"body":{"index.html":{}}}],["stream",{"_index":167,"title":{},"body":{"injectables/StompService.html":{}}}],["streamlin",{"_index":542,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["string",{"_index":117,"title":{},"body":{"injectables/StompConfig.html":{},"changelog.html":{},"index.html":{}}}],["structur",{"_index":253,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":303,"title":{},"body":{"index.html":{}}}],["sub",{"_index":392,"title":{},"body":{"index.html":{}}}],["subject",{"_index":492,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":487,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":157,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{}}}],["subscribe((msg_bodi",{"_index":395,"title":{},"body":{"index.html":{}}}],["subscribe((statu",{"_index":426,"title":{},"body":{"index.html":{}}}],["subscribe(queuenam",{"_index":380,"title":{},"body":{"index.html":{}}}],["subscript",{"_index":404,"title":{},"body":{"index.html":{}}}],["substanti",{"_index":496,"title":{},"body":{"license.html":{}}}],["success",{"_index":449,"title":{},"body":{"index.html":{}}}],["super",{"_index":172,"title":{},"body":{"injectables/StompService.html":{}}}],["super(_conf",{"_index":93,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["support",{"_index":212,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["switch",{"_index":189,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["tabl",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["techniqu",{"_index":432,"title":{},"body":{"index.html":{}}}],["templat",{"_index":387,"title":{},"body":{"index.html":{}}}],["test",{"_index":56,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["testb",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["this._stompservice.config",{"_index":444,"title":{},"body":{"index.html":{}}}],["this._stompservice.connectobserv",{"_index":430,"title":{},"body":{"index.html":{}}}],["this._stompservice.initandconnect",{"_index":445,"title":{},"body":{"index.html":{}}}],["this._stompservice.publish('/topic/ng",{"_index":407,"title":{},"body":{"index.html":{}}}],["this._stompservice.st",{"_index":423,"title":{},"body":{"index.html":{}}}],["this._stompservice.subscribe('/topic/ng",{"_index":391,"title":{},"body":{"index.html":{}}}],["this.client.ws.clos",{"_index":94,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["this.config",{"_index":173,"title":{},"body":{"injectables/StompService.html":{}}}],["this.fetchconfigfromsomewher",{"_index":443,"title":{},"body":{"index.html":{}}}],["this.initandconnect",{"_index":174,"title":{},"body":{"injectables/StompService.html":{}}}],["those",{"_index":562,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["though",{"_index":549,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["till",{"_index":433,"title":{},"body":{"index.html":{}}}],["time",{"_index":570,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["tort",{"_index":517,"title":{},"body":{"license.html":{}}}],["travi",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["tri",{"_index":291,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["true",{"_index":89,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["ts",{"_index":234,"title":{},"body":{"changelog.html":{},"additional-documentation/contributing.html":{}}}],["type",{"_index":102,"title":{},"body":{"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":526,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":191,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["typic",{"_index":58,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unabl",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["uncom",{"_index":55,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["undefin",{"_index":295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["underli",{"_index":31,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["unit",{"_index":568,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["unsubscrib",{"_index":402,"title":{},"body":{"index.html":{}}}],["updat",{"_index":179,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["url",{"_index":46,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["us",{"_index":147,"title":{},"body":{"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/sock-js.html":{},"additional-documentation/contributing.html":{}}}],["usag",{"_index":331,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["user",{"_index":340,"title":{},"body":{"index.html":{}}}],["user/password",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["usevalu",{"_index":371,"title":{},"body":{"index.html":{}}}],["usual",{"_index":431,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["valu",{"_index":71,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/sock-js.html":{}}}],["vari",{"_index":377,"title":{},"body":{"index.html":{}}}],["variabl",{"_index":262,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":205,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":162,"title":{},"body":{"injectables/StompService.html":{}}}],["viaclass",{"_index":355,"title":{},"body":{"index.html":{}}}],["virtual",{"_index":121,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":37,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{}}}],["wait",{"_index":76,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["waitforreceipt",{"_index":184,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":169,"title":{},"body":{"injectables/StompService.html":{}}}],["warranti",{"_index":498,"title":{},"body":{"license.html":{}}}],["watch",{"_index":415,"title":{},"body":{"index.html":{}}}],["way",{"_index":226,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["web",{"_index":349,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":32,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{},"additional-documentation/sock-js.html":{}}}],["websocket/codo/extra/doc",{"_index":544,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["well",{"_index":323,"title":{},"body":{"index.html":{}}}],["whether",{"_index":514,"title":{},"body":{"license.html":{}}}],["wire",{"_index":168,"title":{},"body":{"injectables/StompService.html":{}}}],["without",{"_index":482,"title":{},"body":{"license.html":{}}}],["work",{"_index":321,"title":{},"body":{"index.html":{},"additional-documentation/sock-js.html":{}}}],["worri",{"_index":551,"title":{},"body":{"additional-documentation/sock-js.html":{}}}],["wrapper",{"_index":304,"title":{},"body":{"index.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":52,"title":{},"body":{"classes/MyStompRService.html":{},"classes/MyStompService.html":{},"injectables/StompConfig.html":{},"index.html":{}}}],["yarn",{"_index":326,"title":{},"body":{"index.html":{},"additional-documentation/contributing.html":{}}}],["yarnto",{"_index":574,"title":{},"body":{"additional-documentation/contributing.html":{}}}],["yourclass",{"_index":440,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/specs/app/app.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [\n  ],\n  bootstrap: []\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompRService.html":{"url":"classes/MyStompRService.html","title":"class - MyStompRService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompRService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompRService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:63\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyStompService.html":{"url":"classes/MyStompService.html","title":"class - MyStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyStompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/specs/app/services/stomp.service.factory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    StompService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                forceDisconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_conf: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/specs/app/services/stomp.service.factory.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _conf\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forceDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forceDisconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/specs/app/services/stomp.service.factory.ts:50\n                            \n                        \n\n                \n                    \n                            This method closes the underlying WebSocket, simulating a close due to an error\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompRService, StompService, StompConfig } from '../../../..';\nimport * as SockJS from 'sockjs-client';\n\n\nexport function socketProvider() {\n  // See below (url property of defaultConfig)\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\nexport function defaultConfig(): StompConfig {\n  return {\n    // Which server?\n    url: 'ws://127.0.0.1:15674/ws',\n\n    // Comment above and uncomment below to test with SockJS\n    // url: socketProvider,\n\n    // Headers\n    // Typical keys: login, passcode, host\n    headers: {\n      login: 'guest',\n      passcode: 'guest'\n    },\n\n    // How often to heartbeat?\n    // Interval in milliseconds, set to 0 to disable\n    heartbeat_in: 0, // Typical value 0 - disabled\n    heartbeat_out: 0, // Typical value 20000 - every 20 seconds\n\n    // Wait in milliseconds before attempting auto reconnect\n    // Set to 0 to disable\n    // Typical value 5000 (5 seconds)\n    reconnect_delay: 1000,\n\n    // Will log diagnostics on console\n    debug: true\n  };\n}\n\nexport class MyStompService extends StompService {\n  constructor(private _conf: StompConfig) {\n    super(_conf);\n  }\n\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\nexport function stompServiceFactory(_conf: StompConfig) {\n  return new MyStompService(_conf);\n}\n\nexport class MyStompRService extends StompRService {\n  /**\n   * This method closes the underlying WebSocket, simulating a close due to an error\n   */\n  public forceDisconnect(): void {\n    this.client.ws.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n0.6.4\n\nUpdates in test cases.\nDocumentation update.\nUpdated dependency of @stomp/stompjs to >= 4.0.2\nwaitForReceipt now passes the frame to the callback.\n\n0.6.3\n\nSwitched to Compodoc from TypeDoc.\nChanged StompHeaders types to allow any type (instead of string) as value.\nDocumentation changes.\n\n0.6.2\n\nAdded ability to get server headers from CONNECTED Frame \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#serverHeadersObservable\nEnabled Travis\n\n0.6.1\n\nUpdated dependencies\n\n0.6.0\n\nJump in version number to indicate compiled JS release\nImproved Angular 5 support\n\n0.4.3\n\nAbility to delay initialization\nAngular 5 compatibility\n\n0.4.2\n\nInitial SockJS Support.\nSample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\n\n0.4.0\n\nUpdated to make it compliant to possible use of APP_INITIALIZER. The way to initiate the service has changed and it no longer uses StompConfigService.\nStompConfig is directly injected as dependency into StompService\n\n0.3.8\n\nSwitched to source distribution. The npm bundle now only has .ts files\n\n0.3.5\n\nTest case at https://github.com/stomp-js/ng2-stompjs-testbed these\nwill be merged into main repository in future. Currently unable\nto configure Karma correctly in the main project. Any help appreciated\n\n0.3.4\n\nAdded references to GitHub pages\n\n0.3.0\n\nConfiguration structure has changed, user/password are not part of header\nSupport for headers in connect, subscribe, and publish\nTypedoc for API documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                disconnetStompRAndEnsure\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompConnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/helpers.ts\n            \n            \n                function\n            \n            \n                ensureStompRDisconnected\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompRService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                class\n            \n            \n                MyStompService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                defaultConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                socketProvider\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/specs/app/services/stomp.service.factory.ts\n            \n            \n                function\n            \n            \n                stompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @stomp/stompjs : ^4.0.0 >=4.0.2\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompState   (src/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfig   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            disconnetStompRAndEnsure   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompConnected   (src/.../helpers.ts)\n                        \n                        \n                            ensureStompRDisconnected   (src/.../helpers.ts)\n                        \n                        \n                            socketProvider   (src/.../stomp.service.factory.ts)\n                        \n                        \n                            stompServiceFactory   (src/.../stomp.service.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/specs/app/services/stomp.service.factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefaultConfig()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            socketProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \nsocketProvider()\n                    \n                \n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nstompServiceFactory(_conf: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _conf\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/specs/app/services/helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            disconnetStompRAndEnsure\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisconnetStompRAndEnsure(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompConnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ensureStompRDisconnected\n                            \n                            \n                        \n                    \n                \n                \n                    \nensureStompRDisconnected(stompService: undefined, done: )\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stompService\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        done\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@stomp/ng2-stompjs\n\nAn Angular (Angular2, Angular4, Angular5 ...) style wrapper for @stomp/stompjs.\nSpecial Request\nRecently documentation has been switched to\nCompodoc from TypeDoc.\nPlease raise an issue if you find broken links or inconsistency in documentation.\nDocumentation\nPlease head to https://stomp-js.github.io/ng2-stompjs/\nChangelog at https://stomp-js.github.io/ng2-stompjs/changelog.html\nCompatibility\nTested with Angular CLI generated Angular2 (2.4.0), Angular4 (4.0.0), \nAngular (5.0.0). \nIt has been reported to work with ionic projects as well.\nInstallation\nTo install this library, run:\n$ npm install @stomp/ng2-stompjs --saveor, if using yarn:\n$ yarn add @stomp/ng2-stompjsThis will additionally install @stomp/stompjs \nfrom https://github.com/stomp-js/stomp-websocket\nUsage\n\nSee API documentation at \nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompService.html,\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html\nand https://stomp-js.github.io/ng2-stompjs/index.html\nSee https://github.com/stomp-js/ng4-stompjs-demo for a working sample\nusing Angular4 and Angular CLI\nSee https://github.com/stomp-js/ng2-stompjs-demo for a working sample\nusing Angular2 and Angular CLI. This version also demonstrates fetching\nStomp configuration using a http call (APP_INITIALIZER)\nSee SockJS Support.\nhttps://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs for a sample\nusing SockJS\n\nSockJS Users\nYou must read https://stomp-js.github.io/ng2-stompjs/additional-documentation/sock-js.html  \nPrerequisites\n\nYou will need to have a Stomp broker running.\nThe sample code on this page assumes you have\nRabbitMQ running with default settings and Web STOMP plugin activated.\n(see: https://www.rabbitmq.com/web-stomp.html.)\n\nAll the Hard Work\n\nThe main service is StompService, which will need to be provided\nThe STOMP Broker connection details will need to be provided viaclass StompConfig. See the samples for several ways to configure it\nSee https://angular.io/docs/ts/latest/guide/dependency-injection.html for\nbackground reading\nSample configuration:\n\n    const stompConfig: StompConfig = {\n      // Which server?\n      url: 'ws://127.0.0.1:15674/ws',\n\n      // Headers\n      // Typical keys: login, passcode, host\n      headers: {\n        login: 'guest',\n        passcode: 'guest'\n      },\n\n      // How often to heartbeat?\n      // Interval in milliseconds, set to 0 to disable\n      heartbeat_in: 0, // Typical value 0 - disabled\n      heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n      // Wait in milliseconds before attempting auto reconnect\n      // Set to 0 to disable\n      // Typical value 5000 (5 seconds)\n      reconnect_delay: 5000,\n\n      // Will log diagnostics on console\n      debug: true\n    };\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts \nfor a sample code file with configuration passed from a local\nhash. Feel free to copy and modify this file\nSee https://github.com/stomp-js/ng2-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample code file with configuration fetched from a http\nresource\nAssuming the config specified as a const, code sample to \nprovide StompService and StompConfig will look like:\n\n  providers: [\n    StompService,\n    {\n      provide: StompConfig,\n      useValue: stompConfig\n    }\n  ]\nSee https://github.com/stomp-js/ng4-stompjs-demo/blob/master/src/app/app.module.ts\nfor a sample file\n\nReap the Benefits\nInject StompService\nIn your constructor (typically of a component or a service), inject\n  StompService as a dependency:\nconstructor(private _stompService: StompService) { }Subscribe to a queue\nThe queue name structure and semantics vary\nbased on your specific STOMP Broker, \nsee: https://www.rabbitmq.com/stomp.html\nfor RabbitMQ specific details.\nCall subscribe(queueName: string, headers: StompHeaders = {}) \nwith name of the queue which returns an Observable (details at:\nhttps://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#subscribe). Any\nof Observable specific operators (map, filter, subscribe, etc.) can be\napplied on it. This can also be set into a template with async pipe.\nExample:\n    let stomp_subscription = this._stompService.subscribe('/topic/ng-demo-sub');\n\n    stomp_subscription.map((message: Message) => {\n      return message.body;\n    }).subscribe((msg_body: string) => {\n      console.log(`Received: ${msg_body}`);\n    });\nThe Message class comes from @stomp/stompjs. So, you will need the\nfollowing import in the classes where you consume messages:\nimport {Message} from '@stomp/stompjs';Unsubscribe from a queue\nYou will need to unsubscribe from stomp_subscription (which is an Observer),\nit will then internally unsubscribe from the underlying STOMP queue\nsubscription.\nPublishing messages\nCall publish(queueName: string, message: string, headers: StompHeaders = {}) \n(details at: https://stomp-js.github.io/ng2-stompjs/injectables/StompRService.html#publish).\nExample:\nthis._stompService.publish('/topic/ng-demo-sub', 'My important message');Please note that message is actually string. So, if you need to send JSON\nyou will need to convert it into string (typically using \nJSON.stringify())\nWatching for Stomp connection status\n\nstompService.state is a BehaviorSubject which maintains and switches\nits value as per the underlying Stomp Connection status.\nThe value is from an enum with these possible values: \nCLOSED\nTRYING\nCONNECTED\nDISCONNECTING\n\n\nThe following code will subscribe to stompService.state and convert\nthe enum value (which is a number) to the corresponding string value:\n\n    this._stompService.state\n      .map((state: number) => StompState[state])\n      .subscribe((status: string) => {\n      console.log(`Stomp connection status: ${status}`);\n    });If you are interested in watching only when connection is established, you can\nsubscribe to this._stompService.connectObservable.\nDelayed initialization\nIt is usually possible to use Angular dependency injection techniques and\nAPP_INITIALIZER to delay the initialization till the configuration is ready\n(may be fetched using an API call.) See a sample at:\nhttps://github.com/stomp-js/ng2-stompjs-demo\nThe initialization process can be manually controlled with the additional \nclass StompRService which is injected \ninstead of StompService. This has a few additional\nmethods to assign a configuration and manually initiate the connection to the STOMP Broker.\n// Do not provide StompService or StompConfig, only provide StompRService\n\n  providers: [\n    StompRService\n  ]\nclass YourClass {}\n    constructor(private _stompService: StompRService) { }\n\n    public initStomp() {\n      StompConfig config;\n\n      cofig = this.fetchConfigFromSomeWhere();\n\n      this._stompService.config = config;\n      this._stompService.initAndConnect();\n    }\n}The methods subscribe and publish can be called even before call to initAndConnect.\nHowever these will be queued till the actual connection is successful.\nFor the curious - initAndConnect may be called more than once with a potentially\nupdated configuration.\nContributors\n\nSam Finnigan\nJimi (Dimitris) Charalampidis\nDeepak Kumar\nAstha Deep\nMichel Promonet\nEveryone involved at https://github.com/stomp-js/stomp-websocket\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Deepak Kumar\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StompHeaders   (src/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/sock-js.html":{"url":"additional-documentation/sock-js.html","title":"additional-page - Sock JS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with SockJS\nSee sample at https://github.com/stomp-js/ng4-stompjs-demo/tree/sockjs\nAlmost all brokers that support SockJS also support WebSockets.\nIf your application does not need to support old browsers, switch to using WebSockets.\nCheck https://en.wikipedia.org/wiki/WebSocket for compatibility information.\nNotes\n\nIt is an initial release.\nInstead of a url in the default form, you need \nto pass it as a socketProvider function. It will be streamlined in a\nfuture release.\nPlease read notes on SockJS support of the underlying library at\nhttps://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nUsage\nInstall SockJS Client\n$ npm install sockjs-client --saveImport SockJS class\nimport * as SockJS from 'sockjs-client';Implement a socketProvider\nCreate a function that returns an object similar to WebSocket (typically SockJS instance).\nexport function socketProvider() {\n  return new SockJS('http://127.0.0.1:15674/stomp');\n}StompConfig\nPass the function as url in StompConfig.\n It will work even\nthough name of the parameter is url, don't worry :)\nExample:\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: socketProvider,\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n    login: 'guest',\n    passcode: 'guest'\n  },\n\n  // How frequent is the heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};Limitations\nCopied from https://stomp-js.github.io/stomp-websocket/codo/extra/docs-src/sockjs.md.html\n\nSockJS is an emulation of WebSockets. This is not a complete implementation.\nHeart beating is not supported.\nSockJS internally uses one of many possible means to communicate. In some of those, auto reconnect may occasionally fail.\n\nWhen Hacking Code of this Library\n\nWhen developing on this library code to use SockJS, please adjust the unit tests to use\nSockJS.\nUnit testes may occasionally fail in SockJS. It is because of limitations\nof SockJS around allowing only one SockJS connection at a time. Usually \nthis should not affect your usage of the library.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributing.html":{"url":"additional-documentation/contributing.html","title":"additional-page - Contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing\nDevelopment\nAfter checking out from GitHub, install the dependencies:\n$ npm installor, if using yarn:\n$ yarnTo generate documentation:\n$ npm run docTo lint all *.ts files:\n$ npm run lint\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
